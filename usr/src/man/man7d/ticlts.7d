'\" te
.\" Copyright 2000, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH TICLTS 7D "Jul 3, 1990"
.SH NAME
ticlts, ticots, ticotsord \- loopback transport providers
.SH SYNOPSIS
.LP
.nf
#include <sys/ticlts.h>
.fi

.LP
.nf
#include <sys/ticots.h>
.fi

.LP
.nf
#include <sys/ticotsord.h>
.fi

.SH DESCRIPTION
.sp
.LP
The devices known as \fBticlts\fR, \fBticots\fR, and \fBticotsord\fR  are
``loopback transport providers,'' that is, stand-alone networks at the
transport level. Loopback transport providers are transport providers in every
sense except one: only one host (the local machine) is ``connected to'' a
loopback network. Loopback transports present a \fBTPI\fR (STREAMS-level)
interface to application processes and are intended to be accessed via the
\fBTLI\fR (application-level) interface. They are implemented as clone devices
and support address spaces consisting of ``flex-addresses,'' that is, arbitrary
sequences of octets of length > 0, represented by a \fBnetbuf\fR structure.
.sp
.LP
\fBticlts\fR is a datagram-mode transport provider. It offers (connectionless)
service of type \fBT_CLTS\fR. Its default address size is
\fBTCL_DEFAULTADDRSZ\fR. \fBticlts\fR prints the following error messages (see
\fBt_rcvuderr\fR(3NSL)):
.sp
.ne 2
.na
\fBTCL_BADADDR\fR
.ad
.RS 20n
bad address specification
.RE

.sp
.ne 2
.na
\fBTCL_BADOPT\fR
.ad
.RS 20n
bad option specification
.RE

.sp
.ne 2
.na
\fBTCL_NOPEER\fR
.ad
.RS 20n
bound
.RE

.sp
.ne 2
.na
\fBTCL_PEERBADSTATE\fR
.ad
.RS 20n
peer in wrong state
.RE

.sp
.LP
\fBticots\fR is a virtual circuit-mode transport provider. It offers
(connection-oriented) service of type \fBT_COTS\fR. Its default address size is
\fBTCO_DEFAULTADDRSZ\fR. \fBticots\fR prints the following disconnect messages
(see  \fBt_rcvdis\fR(3NSL)):
.sp
.ne 2
.na
\fBTCO_NOPEER\fR
.ad
.RS 25n
no listener on destination address
.RE

.sp
.ne 2
.na
\fBTCO_PEERNOROOMONQ\fR
.ad
.RS 25n
peer has no room on connect queue
.RE

.sp
.ne 2
.na
\fBTCO_PEERBADSTATE\fR
.ad
.RS 25n
peer in wrong state
.RE

.sp
.ne 2
.na
\fBTCO_PEERINITIATED\fR
.ad
.RS 25n
peer-initiated disconnect
.RE

.sp
.ne 2
.na
\fBTCO_PROVIDERINITIATED\fR
.ad
.RS 25n
provider-initiated disconnect
.RE

.sp
.LP
\fBticotsord\fR is a virtual circuit-mode transport provider, offering service
of type  \fBT_COTS_ORD\fR (connection-oriented service with orderly release).
Its default address size is \fBTCOO_DEFAULTADDRSZ\fR. \fBticotsord\fR prints
the following disconnect messages (see \fBt_rcvdis\fR(3NSL)):
.sp
.ne 2
.na
\fBTCOO_NOPEER\fR
.ad
.RS 26n
no listener on destination address
.RE

.sp
.ne 2
.na
\fBTCOO_PEERNOROOMONQ\fR
.ad
.RS 26n
peer has no room on connect queue
.RE

.sp
.ne 2
.na
\fBTCOO_PEERBADSTATE\fR
.ad
.RS 26n
peer in wrong state
.RE

.sp
.ne 2
.na
\fBTCOO_PEERINITIATED\fR
.ad
.RS 26n
provider-initiated disconnect
.RE

.sp
.ne 2
.na
\fBTCOO_PROVIDERINITIATED\fR
.ad
.RS 26n
peer-initiated disconnect
.RE

.SH USAGE
.sp
.LP
Loopback transports support a local \fBIPC\fR mechanism through the \fBTLI\fR
interface. Applications implemented in a transport provider-independent manner
on a client-server model using this \fBIPC\fR are transparently transportable
to networked environments.
.sp
.LP
Transport provider-independent applications must not include the headers listed
in the synopsis section above. In particular, the options are (like all
transport provider options) provider dependent.
.sp
.LP
\fBticlts\fR and \fBticots\fR support the same service types (\fBT_CLTS\fR and
\fBT_COTS\fR) supported by the \fBOSI\fR transport-level model.
.sp
.LP
\fBticotsord\fR supports the same service type (\fBT_COTSORD\fR) supported by
the \fBTCP/IP\fR model.
.SH FILES
.sp
.LP
\fB/dev/ticlts\fR
.sp
.LP
\fB/dev/ticots\fR
.sp
.LP
\fB/dev/ticotsord\fR
.SH SEE ALSO
.sp
.LP
\fBt_rcvdis\fR(3NSL), \fBt_rcvuderr\fR(3NSL)
