'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License"). You may not use this file except in compliance with the License. You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.
.\"  See the License for the specific language governing permissions and limitations under the License. When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE. If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH HID 7D "May 13, 2017"
.SH NAME
hid \- Human interface device (HID) class driver
.SH SYNOPSIS
.LP
.nf
\fBkeyboard@unit-address\fR
\fBmouse@unit-address\fR
\fBinput@unit-address:consumer_control\fR
\fB#include <sys/hid.h>\fR
\fBint ioctl(int fildes, int command, ... /*arg*/);\fR
.fi

.SH DESCRIPTION
.LP
The \fBhid\fR driver is a USBA (Solaris USB Architecture) compliant client
driver that supports the \fIHuman Interface Device Class (HID) 1.0\fR
specification. The Human Interface Device (HID) class encompasses devices
controlled by humans to operate computer systems. Typical examples of HID
devices include keyboards, mice, trackballs, and joysticks. HID also covers
front-panel controls such as knobs, switches, and buttons. A USB device with
multiple interfaces may have one interface for audio and a HID interface to
define the buttons that control the audio.
.sp
.LP
The \fBhid\fR driver is general and primarily handles the USB functionality of
the device and generic HID functionality. For example, HID interfaces are
required to have an interrupt pipe for the device to send data packets, and the
\fBhid\fR driver opens the pipe to the interrupt endpoint and starts polling.
The \fBhid\fR driver is also responsible for managing the device through the
default control pipe. In addition to being a USB client driver, the \fBhid\fR
driver is also a STREAMS driver so that modules may be pushed on top of it.
.sp
.LP
The HID specification is flexible, and HID devices dynamically describe their
packets and other parameters through a HID report descriptor. The HID parser is
a misc module that parses the HID report descriptor and creates a database of
information about the device. The \fBhid\fR driver queries the HID parser to
find out the type and characteristics of the HID device. The HID specification
predefines packet formats for the boot protocol keyboard and mouse.
.SH IOCTLS
.ne 2
.na
\fB\fBHIDIOCKMGDIRECT\fR\fR
.ad
.RS 19n
This ioctl should only be addressed to a USB keyboard or mouse device. The
\fBhid\fR driver maintains two streams for each USB keyboard/mouse instance: an
internal one for the use of the kernel and an external one for the use of user
applications. This ioctl returns the information of which stream gets the input
for the moment.
.sp
\fIarg\fR must point to a variable of \fBint\fR type. Upon return, \fB0\fR
means the internal stream gets the input, \fB1\fR means the external stream
gets the input.
.RE

.sp
.ne 2
.na
\fB\fBHIDIOCKMSDIRECT\fR\fR
.ad
.RS 19n
This ioctl should only be addressed to a USB keyboard or mouse device. The hid
driver maintains two streams for each USB keyboard/mouse instance: an internal
one for the use of the kernel and an external one for the use of user
applications. This ioctl sets which stream should get the input for the moment.
.sp
\fIarg\fR must point to a variable of \fBint\fR type. The argument \fB0\fR
means the internal stream gets the input, \fB1\fR means the external stream
gets the input.
.RE

.SH FILES
.ne 2
.na
\fB\fB/kernel/drv/hid\fR\fR
.ad
.sp .6
.RS 4n
32-bit x86 ELF kernel hid module
.RE

.sp
.ne 2
.na
\fB\fB/kernel/drv/amd64/hid\fR\fR
.ad
.sp .6
.RS 4n
64-bit x86 ELF kernel hid module
.RE

.sp
.ne 2
.na
\fB\fB/kernel/drv/sparcv9/hid\fR\fR
.ad
.sp .6
.RS 4n
64-bit SPARC ELF kernel hid module
.RE

.sp
.ne 2
.na
\fB\fB/kernel/misc/hidparser\fR\fR
.ad
.sp .6
.RS 4n
32-bit x86 ELF kernel hidparser module
.RE

.sp
.ne 2
.na
\fB\fB/kernel/misc/amd64/hidparser\fR\fR
.ad
.sp .6
.RS 4n
64-bit x86 ELF kernel hidparser module
.RE

.sp
.ne 2
.na
\fB\fB/kernel/misc/sparcv9/hidparser\fR\fR
.ad
.sp .6
.RS 4n
64-bit SPARC ELF kernel hidparser module
.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Architecture	SPARC, x86, PCI-based systems
.TE

.SH SEE ALSO
.LP
\fBcfgadm_usb\fR(1M), \fBattributes\fR(5), \fBusba\fR(7D), \fBvirtualkm\fR(7D)
.sp
.LP
\fIWriting Device Drivers\fR
.sp
.LP
\fISTREAMS Programming Guide\fR
.sp
.LP
\fIUniversal Serial Bus Specification 1.0 and 1.1\fR
.sp
.LP
\fIDevice Class Definition for Human Interface Devices (HID) 1.1\fR
.sp
.LP
\fISystem Administration Guide: Basic Administration\fR
.SH DIAGNOSTICS
.ne 2
.na
\fBhid_attach: Unsupported HID device.\fR
.ad
.sp .6
.RS 4n
The device requires a protocol not supported by the hid driver.
.RE

.sp
.ne 2
.na
\fBParsing of hid descriptor failed.\fR
.ad
.sp .6
.RS 4n
The HID report descriptor cannot be parsed correctly. The device cannot be
supported by the hid driver.
.RE

.sp
.ne 2
.na
\fBInvalid report descriptor.\fR
.ad
.sp .6
.RS 4n
The HID report descriptor is invalid. The device cannot be supported by the hid
driver.
.RE

.sp
.LP
The following messages may be logged into the system log. They are formatted in
the following manner:
.sp
.in +2
.nf
<device path><hid<instance number>): message...
.fi
.in -2
.sp

.sp
.ne 2
.na
\fBhid_attach: Unsupported HID device.\fR
.ad
.sp .6
.RS 4n
The device cannot be supported by this version of the HID driver.
.RE

.sp
.ne 2
.na
\fBParsing of HID descriptor failed.\fR
.ad
.sp .6
.RS 4n
The device cannot be supported by this version of the HID driver.
.RE

.sp
.ne 2
.na
\fBInvalid report descriptor.\fR
.ad
.sp .6
.RS 4n
The device cannot be supported by this version of the HID driver.
.RE

.SH NOTES
.LP
The hid driver currently supports only keyboard, mouse and audio HID control
devices.
.sp
.LP
Normally a mouse is not power managed and consequently, screen darkening can be
undone with a mouse movement. If power management of the mouse is required, add
the following line to \fBhid.conf\fR then reboot the system:
.sp
.in +2
.nf
hid-mouse-pm-enable;
.fi
.in -2

.sp
.LP
Modern mice that are power managed require a 'click' to wake up. Occasionally,
this may cause unexpected results.
