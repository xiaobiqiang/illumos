.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Portions Copyright (c) 1998, Sun Microsystems, Inc.  All Rights Reserved.
.\"
.TH RECVFROM 3XNET "April 9, 2016"
.SH NAME
recvfrom \- receive a message from a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-lxnet\fR [ \fIlibrary\fR ... ]
#include <sys/socket.h>

\fBssize_t\fR \fBrecvfrom\fR(\fBint\fR \fIsocket\fR, \fBvoid *restrict\fR \fIbuffer\fR, \fBsize_t\fR \fIlength\fR,
     \fBint\fR \fIflags\fR, \fBstruct sockaddr *restrict\fR \fIaddress\fR,
     \fBsocklen_t *restrict\fR \fIaddress_len\fR);
.fi

.SH DESCRIPTION
.LP
The \fBrecvfrom()\fR function receives a message from a connection-mode or
connectionless-mode socket.  It is normally used with connectionless-mode
sockets because it permits the application to retrieve the source address of
received data.
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.na
\fB\fIsocket\fR\fR
.ad
.RS 15n
Specifies the socket file descriptor.
.RE

.sp
.ne 2
.na
\fB\fIbuffer\fR\fR
.ad
.RS 15n
Points to the buffer where the message should be stored.
.RE

.sp
.ne 2
.na
\fB\fIlength\fR\fR
.ad
.RS 15n
Specifies the length in bytes of the buffer pointed to by the \fIbuffer\fR
argument.
.RE

.sp
.ne 2
.na
\fB\fIflags\fR\fR
.ad
.RS 15n
Specifies the type of message reception.  Values of this argument are formed by
logically OR'ing zero or more of the following values:
.sp
.ne 2
.na
\fBMSG_PEEK\fR
.ad
.RS 15n
Peeks at an incoming message.  The data is treated as unread and the next
\fBrecvfrom()\fR or similar function will still return this data.
.RE

.sp
.ne 2
.na
\fBMSG_OOB\fR
.ad
.RS 15n
Requests out-of-band data. The significance and semantics of out-of-band data
are protocol-specific.
.RE

.sp
.ne 2
.na
\fBMSG_WAITALL\fR
.ad
.RS 15n
Requests that the function block until the full amount of data requested can be
returned.  The function may return a smaller amount of data if a signal is
caught,  if the connection is terminated,  if MSG_PEEK was specified, or if an
error is pending for the socket.
.RE

.RE

.sp
.ne 2
.na
\fB\fIaddress\fR\fR
.ad
.RS 15n
A null pointer, or points to a \fBsockaddr\fR structure in which the sending
address is to be stored.  The length and format of the address depend on the
address family of the socket.
.RE

.sp
.ne 2
.na
\fB\fIaddress_len\fR\fR
.ad
.RS 15n
Specifies the length of the \fBsockaddr\fR structure pointed to by the
\fIaddress\fR argument.
.RE

.sp
.LP
The \fBrecvfrom()\fR function returns the length of the message written to the
buffer pointed to by the \fIbuffer\fR argument.  For message-based sockets such
as \fBSOCK_DGRAM\fR and \fBSOCK_SEQPACKET\fR, the entire message must be read
in a single operation.  If a message is too long to fit in the supplied buffer,
and \fBMSG_PEEK\fR is not set in the \fIflags\fR argument, the excess bytes are
discarded.  For stream-based sockets such as \fBSOCK_STREAM\fR, message
boundaries are ignored.  In this case, data is returned to the user as soon as
it becomes available, and no data is discarded.
.sp
.LP
If the \fBMSG_WAITALL\fR flag is not set, data will be returned only up to the
end of the first message.
.sp
.LP
Not all protocols provide the source address for messages.  If the
\fIaddress\fR argument is not a null pointer and the protocol provides the
source address of messages, the source address of the received message is
stored in the \fBsockaddr\fR structure pointed to by the \fIaddress\fR
argument, and the length of this address is stored in the object pointed to by
the \fIaddress_len\fR argument.
.sp
.LP
If the actual length of the address is greater than the length of the supplied
\fBsockaddr\fR structure, the stored address will be truncated.
.sp
.LP
If the \fIaddress\fR argument is not a null pointer and the protocol does not
provide the source address of messages, then the value stored in the object
pointed to by \fIaddress\fR is unspecified.
.sp
.LP
If no messages are available at the socket and \fBO_NONBLOCK\fR is not set on
the socket's file descriptor, \fBrecvfrom()\fR blocks until a message arrives.
If no messages are available at the socket and \fBO_NONBLOCK\fR is set on the
socket's file descriptor, \fBrecvfrom()\fR fails and sets \fBerrno\fR to
\fBEAGAIN\fR or \fBEWOULDBLOCK\fR.
.SH USAGE
.LP
The \fBselect\fR(3C) and \fBpoll\fR(2) functions can be used to determine when
data is available to be received.
.SH RETURN VALUES
.LP
Upon successful completion, \fBrecvfrom()\fR returns the length of the message
in bytes.  If no messages are available to be received and the peer has
performed an orderly shutdown, \fBrecvfrom()\fR returns 0.  Otherwise the
function returns \(mi1 and sets \fBerrno\fR to indicate the error.
.SH ERRORS
.LP
The \fBrecvfrom()\fR function will fail if:
.sp
.ne 2
.na
\fB\fBEAGAIN\fR\fR
.ad
.br
.na
\fB\fBEWOULDBLOCK\fR\fR
.ad
.RS 15n
The socket's file descriptor is marked \fBO_NONBLOCK\fR and no data is waiting
to be received, or \fBMSG_OOB\fR is set and no out-of-band data is available
and either the socket's file descriptor is marked \fBO_NONBLOCK\fR or the
socket does not support blocking to await out-of-band data.
.RE

.sp
.ne 2
.na
\fB\fBEBADF\fR\fR
.ad
.RS 15n
The \fIsocket\fR argument is not a valid file descriptor.
.RE

.sp
.ne 2
.na
\fB\fBECONNRESET\fR\fR
.ad
.RS 15n
A connection was forcibly closed by a peer.
.RE

.sp
.ne 2
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 15n
The  \fIbuffer\fR, \fIaddress\fR or  \fIaddress_len\fR parameter can not be
accessed or written.
.RE

.sp
.ne 2
.na
\fB\fBEINTR\fR\fR
.ad
.RS 15n
A signal interrupted \fBrecvfrom()\fR before any data was available.
.RE

.sp
.ne 2
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 15n
The \fBMSG_OOB\fR flag is set and no out-of-band data is available.
.RE

.sp
.ne 2
.na
\fB\fBENOTCONN\fR\fR
.ad
.RS 15n
A receive is attempted on a connection-mode socket that is not connected.
.RE

.sp
.ne 2
.na
\fB\fBENOTSOCK\fR\fR
.ad
.RS 15n
The \fIsocket\fR argument does not refer to a socket.
.RE

.sp
.ne 2
.na
\fB\fBEOPNOTSUPP\fR\fR
.ad
.RS 15n
The specified flags are not supported for this socket type.
.RE

.sp
.ne 2
.na
\fB\fBETIMEDOUT\fR\fR
.ad
.RS 15n
The connection timed out during connection establishment, or due to a
transmission timeout on active connection.
.RE

.sp
.LP
The \fBrecvfrom()\fR function may fail if:
.sp
.ne 2
.na
\fB\fBEIO\fR\fR
.ad
.RS 11n
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.na
\fB\fBENOBUFS\fR\fR
.ad
.RS 11n
Insufficient resources were available in the system to perform the operation.
.RE

.sp
.ne 2
.na
\fB\fBENOMEM\fR\fR
.ad
.RS 11n
Insufficient memory was available to fulfill the request.
.RE

.sp
.ne 2
.na
\fB\fBENOSR\fR\fR
.ad
.RS 11n
There were insufficient STREAMS resources available for the operation to
complete.
.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Standard
_
MT-Level	MT-Safe
.TE

.SH SEE ALSO
.LP
\fBpoll\fR(2), \fBsockaddr\fR(3SOCKET),
\fBrecv\fR(3XNET), \fBrecvmsg\fR(3XNET), \fBselect\fR(3C)
\fBsend\fR(3XNET), \fBsendmsg\fR(3XNET), \fBsendto\fR(3XNET),
\fBshutdown\fR(3XNET), \fBsocket\fR(3XNET), \fBattributes\fR(5),
\fBstandards\fR(5)
