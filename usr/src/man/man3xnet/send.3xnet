.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Portions Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\"
.TH SEND 3XNET "Aug 16, 2018"
.SH NAME
send \- send a message on a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-lxnet\fR [ \fIlibrary\fR ... ]
#include <sys/socket.h>

\fBssize_t\fR \fBsend\fR(\fBint\fR \fIsocket\fR, \fBconst void *\fR\fIbuffer\fR, \fBsize_t\fR \fIlength\fR, \fBint flags\fR);
.fi

.SH PARAMETERS
.ne 2
.na
\fB\fIsocket\fR\fR
.ad
.RS 10n
Specifies the socket file descriptor.
.RE

.sp
.ne 2
.na
\fB\fIbuffer\fR\fR
.ad
.RS 10n
Points to the buffer containing the message to send.
.RE

.sp
.ne 2
.na
\fB\fIlength\fR\fR
.ad
.RS 10n
Specifies the length of the message in bytes.
.RE

.sp
.ne 2
.na
\fB\fIflags\fR\fR
.ad
.RS 10n
Specifies the type of message transmission. Values of this argument are formed
by logically OR'ing zero or more of the following flags:
.sp
.ne 2
.na
\fB\fBMSG_EOR\fR\fR
.ad
.RS 11n
Terminates a record (if supported by the protocol)
.RE

.sp
.ne 2
.na
\fB\fBMSG_OOB\fR\fR
.ad
.RS 11n
Sends out-of-band data on sockets that support out-of-band communications. The
significance and semantics of out-of-band data are protocol-specific.
.RE

.sp
.ne 2
.na
\fB\fBMSG_NOSIGNAL\fR\fR
.ad
.RS 11n
Don't generate the \fBSIGPIPE\fR signal when a stream-oriented socket is no
longer connected.
.RE

.RE

.SH DESCRIPTION
.LP
The \fBsend()\fR function initiates transmission of a message from the
specified socket to its peer.  The \fBsend()\fR function sends a message only
when the socket is connected (including when the peer of a connectionless
socket has been set via \fBconnect\fR(3XNET)).
.sp
.LP
The length of the message to be sent is specified by the \fIlength\fR argument.
If the message is too long to pass through the underlying protocol,
\fBsend()\fR fails and no data is transmitted.
.sp
.LP
Successful completion of a call to \fBsend()\fR does not guarantee delivery of
the message.  A return value of \(mi1 indicates only locally-detected errors.
.sp
.LP
If space is not available at the sending socket to hold the message to be
transmitted and the socket file descriptor does not have \fBO_NONBLOCK\fR set,
\fBsend()\fR blocks until space is available.  If space is not available at the
sending socket to hold the message to be transmitted and the socket file
descriptor does have \fBO_NONBLOCK\fR set, \fBsend()\fR will fail. The
\fBselect\fR(3C) and \fBpoll\fR(2) functions can be used to determine when it
is possible to send more data.
.sp
.LP
The socket in use may require the process to have appropriate privileges to use
the \fBsend()\fR function.
.SH USAGE
.LP
The \fBsend()\fR function is identical to \fBsendto\fR(3XNET) with a null
pointer \fIdest_len\fR argument, and to \fBwrite()\fR if no flags are used.
.SH RETURN VALUES
.LP
Upon successful completion, \fBsend()\fR returns the number of bytes sent.
Otherwise, \(mi1 is returned and \fBerrno\fR is set to indicate the error.
.SH ERRORS
.LP
The \fBsend()\fR function will fail if:
.sp
.ne 2
.na
\fB\fBEAGAIN\fR \fR
.ad
.br
.na
\fB\fBEWOULDBLOCK\fR\fR
.ad
.RS 16n
The socket's file descriptor is marked \fBO_NONBLOCK\fR and the requested
operation would block.
.RE

.sp
.ne 2
.na
\fB\fBEBADF\fR\fR
.ad
.RS 16n
The \fIsocket\fR argument is not a valid file descriptor.
.RE

.sp
.ne 2
.na
\fB\fBECONNRESET\fR\fR
.ad
.RS 16n
The \fIsocket\fR argument refers to a connection oriented socket and the
connection was forcibly closed by the peer and is no longer valid. I/O can no
longer be performed to \fIfiledes\fR.
.RE

.sp
.ne 2
.na
\fB\fBEDESTADDRREQ\fR\fR
.ad
.RS 16n
The socket is not connection-mode and no peer address is set.
.RE

.sp
.ne 2
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 16n
The  \fIbuffer\fR parameter can not be accessed.
.RE

.sp
.ne 2
.na
\fB\fBEINTR\fR\fR
.ad
.RS 16n
A signal interrupted \fBsend()\fR before any data was transmitted.
.RE

.sp
.ne 2
.na
\fB\fBEMSGSIZE\fR\fR
.ad
.RS 16n
The message is too large be sent all at once, as the socket requires.
.RE

.sp
.ne 2
.na
\fB\fBENOTCONN\fR\fR
.ad
.RS 16n
The socket is not connected or otherwise has not had the peer prespecified.
.RE

.sp
.ne 2
.na
\fB\fBENOTSOCK\fR\fR
.ad
.RS 16n
The \fIsocket\fR argument does not refer to a socket.
.RE

.sp
.ne 2
.na
\fB\fBEOPNOTSUPP\fR\fR
.ad
.RS 16n
The \fIsocket\fR argument is associated with a socket that does not support one
or more of the values set in \fIflags\fR.
.RE

.sp
.ne 2
.na
\fB\fBEPIPE\fR\fR
.ad
.RS 16n
The socket is shut down for writing, or the socket is connection-mode and is no
longer connected. In the latter case, and if the socket is of type
\fBSOCK_STREAM\fR, the \fBSIGPIPE\fR signal is generated to the calling thread
unless the \fBMSG_NOSIGNAL\fR flag is set.
.RE

.sp
.LP
The \fBsend()\fR function may fail if:
.sp
.ne 2
.na
\fB\fBEACCES\fR\fR
.ad
.RS 15n
The calling process does not have the appropriate privileges.
.RE

.sp
.ne 2
.na
\fB\fBEIO\fR\fR
.ad
.RS 15n
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.na
\fB\fBENETDOWN\fR\fR
.ad
.RS 15n
The local interface used to reach the destination is down.
.RE

.sp
.ne 2
.na
\fB\fBENETUNREACH\fR\fR
.ad
.RS 15n
No route to the network is present.
.RE

.sp
.ne 2
.na
\fB\fBENOBUFS\fR\fR
.ad
.RS 15n
Insufficient resources were available in the system to perform the operation.
.RE

.sp
.ne 2
.na
\fB\fBENOSR\fR\fR
.ad
.RS 15n
There were insufficient STREAMS resources available for the operation to
complete.
.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Standard
_
MT-Level	MT-Safe
.TE

.SH SEE ALSO
.LP
\fBconnect\fR(3XNET), \fBgetsockopt\fR(3XNET), \fBpoll\fR(2),
\fBrecv\fR(3XNET), \fBrecvfrom\fR(3XNET), \fBrecvmsg\fR(3XNET),
\fBselect\fR(3C), \fBsendmsg\fR(3XNET), \fBsendto\fR(3XNET),
\fBsetsockopt\fR(3XNET), \fBshutdown\fR(3XNET), \fBsocket\fR(3XNET),
\fBattributes\fR(5), \fBstandards\fR(5)
