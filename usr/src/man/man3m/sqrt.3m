.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The Berkeley software License Agreement specifies the terms and conditions
.\" for redistribution.
.\"
.\"
.\" Copyright (c) 1985 Regents of the University of California.
.\" All rights reserved.
.\" Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Copyright (c) 2001, The IEEE and The Open Group.  All Rights Reserved.
.\" Portions Copyright (c) 2006, Sun Microsystems, Inc. All Rights Reserved.
.\"
.TH SQRT 3M "Jul 12, 2006" "SunOS 5.11" "Mathematical Library Functions"
.SH NAME
sqrt, sqrtf, sqrtl \- square root function
.SH SYNOPSIS
.LP
.nf
c99 [ \fIflag\fR... ] \fIfile\fR... \fB-lm\fR [ \fIlibrary\fR... ]
#include <math.h>

\fBdouble\fR \fBsqrt\fR(\fBdouble\fR \fIx\fR);
.fi

.LP
.nf
\fBfloat\fR \fBsqrtf\fR(\fBfloat\fR \fIx\fR);
.fi

.LP
.nf
\fBlong double\fR \fBsqrtl\fR(\fBlong double\fR \fIx\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions compute the square root of their argument \fIx\fR.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, these functions return the square root of \fIx\fR.
.sp
.LP
For finite values of \fIx\fR < \(mi0, a domain error occurs and either a NaN
(if supported) or an implementation-defined value is returned.
.sp
.LP
If \fIx\fR is NaN, a NaN is returned.
.sp
.LP
If \fIx\fR is \(+-0 or +Inf, \fIx\fR is returned.
.sp
.LP
If \fIx\fR is \(miInf, a domain error occurs and a NaN is returned.
.SH ERRORS
.sp
.LP
These functions will fail if:
.sp
.ne 2
.mk
.na
\fBDomain Error\fR
.ad
.RS 16n
.rt
The finite value of \fIx\fR is < \(mi0 or \fIx\fR is \(miInf.
.sp
If the integer expression (\fBmath_errhandling\fR & \fBMATH_ERREXCEPT\fR) is
non-zero, the invalid floating-point exception is raised.
.sp
The \fBsqrt()\fR function sets \fBerrno\fR to \fBEDOM\fR if the value of
\fIx\fR is negative.
.RE

.SH USAGE
.sp
.LP
An application wanting to check for exceptions should call
\fBfeclearexcept\fR(\fBFE_ALL_EXCEPT\fR) before calling these functions. On
return, if \fBfetestexcept\fR(\fBFE_INVALID\fR | \fBFE_DIVBYZERO\fR |
\fBFE_OVERFLOW\fR | \fBFE_UNDERFLOW\fR) is non-zero, an exception has been
raised. An application should either examine the return value or check the
floating point exception flags to detect exceptions.
.sp
.LP
An application can also set \fBerrno\fR to 0 before calling \fBsqrt()\fR. On
return, if \fBerrno\fR is non-zero, an error has occurred. The \fBsqrtf()\fR
and \fBsqrtl()\fR functions do not set \fBerrno\fR.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab(	) box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Standard
_
MT-Level	MT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBfeclearexcept\fR(3M), \fBfetestexcept\fR(3M), \fBisnan\fR(3M),
\fBmath.h\fR(3HEAD), \fBattributes\fR(5), \fBstandards\fR(5)
