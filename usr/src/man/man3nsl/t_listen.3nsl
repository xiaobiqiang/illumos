.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Portions Copyright 1989 AT&T
.\" Copyright 1994, The X/Open Company Ltd.  All Rights Reserved.
.\" Portions Copyright (c) 1998, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 2015 Nexenta Systems, Inc.  All rights reserved.
.\"
.TH T_LISTEN 3NSL "Feb 18, 2015"
.SH NAME
t_listen \- listen for a connection indication
.SH SYNOPSIS
.LP
.nf
#include <xti.h>



\fBint\fR \fBt_listen\fR(\fBint\fR \fIfd\fR, \fBstruct t_call *\fR\fIcall\fR);
.fi

.SH DESCRIPTION
.LP
This routine is part of the \fBXTI\fR interfaces which evolved from the
\fBTLI\fR interfaces. \fBXTI\fR represents the future evolution of these
interfaces. However, \fBTLI\fR interfaces are supported for compatibility. When
using a \fBTLI\fR routine that has the same name as an \fBXTI\fR routine, the
\fBtiuser.h\fR header file must be used.  Refer to the  \fBTLI\fR
\fBCOMPATIBILITY\fR section for a description of differences between the two
interfaces.
.sp
.LP
This function listens for a connection indication from a calling transport
user. The argument \fIfd\fR identifies the local transport endpoint where
connection indications arrive, and on return, \fIcall\fR contains information
describing the connection indication. The parameter \fIcall\fR points to a
\fBt_call\fR structure which contains the following members:
.sp
.in +2
.nf
\fBstruct netbuf addr;
struct netbuf opt;
struct netbuf udata;
int sequence;\fR
.fi
.in -2

.sp
.LP
In \fIcall\fR, \fIaddr\fR returns the protocol address of the calling transport
user. This address is in a format usable in future calls to
\fBt_connect\fR(3NSL). Note, however that \fBt_connect\fR(3NSL) may fail for
other reasons, for example \fBTADDRBUSY\fR. \fIopt\fR returns options
associated with the connection indication, \fIudata\fR returns any user data
sent by the caller on the connection request, and \fIsequence\fR is a number
that uniquely identifies the returned connection indication. The value of
\fIsequence\fR enables the user to listen for multiple connection indications
before responding to any of them.
.sp
.LP
Since this function returns values for the \fIaddr\fR, \fIopt\fR and
\fIudata\fR fields of \fIcall\fR, the \fImaxlen\fR field of each must be set
before issuing the \fBt_listen()\fR to indicate the maximum size of the buffer
for each. If the  \fImaxlen\fR field of  \fIcall\(->addr\fR, \fIcall\(->opt\fR
or  \fIcall\(->udata\fR is set to zero, no information is returned for this
parameter.
.sp
.LP
By default, \fBt_listen()\fR executes in synchronous mode and waits for a
connection indication to arrive before returning to the user. However, if
\fBO_NONBLOCK\fR is set via \fBt_open\fR(3NSL) or \fBfcntl\fR(2),
\fBt_listen()\fR executes asynchronously, reducing to a poll for existing
connection indications. If none are available, it returns  -1 and sets
\fBt_errno\fR to \fBTNODATA\fR.
.SH RETURN VALUES
.LP
Upon successful completion, a value of 0 is returned.  Otherwise, a value of
\(mi1 is returned and \fBt_errno\fR is set to indicate an error.
.SH VALID STATES
.LP
\fBT_IDLE\fR, \fBT_INCON\fR
.SH ERRORS
.LP
On failure, \fBt_errno\fR is set to one of the following:
.sp
.ne 2
.na
\fB\fBTBADF\fR\fR
.ad
.RS 15n
The specified file descriptor does not refer to a transport endpoint.
.RE

.sp
.ne 2
.na
\fB\fBTBADQLEN\fR\fR
.ad
.RS 15n
The argument \fIqlen\fR of the endpoint referenced by \fIfd\fR is zero.
.RE

.sp
.ne 2
.na
\fB\fBTBUFOVFLW\fR\fR
.ad
.RS 15n
The number of bytes allocated for an incoming argument \fI(maxlen)\fR is
greater than 0 but not sufficient to store the value of that argument. The
provider's state, as seen by the user, changes to \fBT_INCON,\fR and the
connection indication information to be returned in \fIcall\fR is discarded.
The value of \fIsequence\fR returned can be used to do a \fBt_snddis\fR(3NSL).
.RE

.sp
.ne 2
.na
\fB\fBTLOOK\fR\fR
.ad
.RS 15n
An asynchronous event has occurred on this transport endpoint and requires
immediate attention.
.RE

.sp
.ne 2
.na
\fB\fBTNODATA\fR\fR
.ad
.RS 15n
\fBO_NONBLOCK\fR was set, but no connection indications had been queued.
.RE

.sp
.ne 2
.na
\fB\fBTNOTSUPPORT\fR\fR
.ad
.RS 15n
This function is not supported by the underlying transport provider.
.RE

.sp
.ne 2
.na
\fB\fBTOUTSTATE\fR\fR
.ad
.RS 15n
The communications endpoint referenced by  \fIfd\fR is not in one of the states
in which a call to this function is valid.
.RE

.sp
.ne 2
.na
\fB\fBTPROTO\fR\fR
.ad
.RS 15n
This error indicates that a communication problem has been detected between XTI
and the transport provider for which there is no other suitable XTI error
\fB(t_errno)\fR.
.RE

.sp
.ne 2
.na
\fB\fBTQFULL\fR\fR
.ad
.RS 15n
The maximum number of outstanding connection  indications has been reached for
the endpoint referenced by \fIfd\fR. Note that a subsequent call to
\fBt_listen()\fR may block until another incoming connection indication is
available. This can only occur if at least one of the outstanding connection
indications becomes no longer outstanding, for example through a call to
\fBt_accept\fR(3NSL).
.RE

.sp
.ne 2
.na
\fB\fBTSYSERR\fR\fR
.ad
.RS 15n
A system error has occurred during execution of this function.
.RE

.SH TLI COMPATIBILITY
.LP
The \fBXTI\fR and \fBTLI\fR interface definitions have common names but use
different header files. This, and other semantic differences between the two
interfaces are described in the subsections below.
.SS "Interface Header"
.LP
The \fBXTI\fR interfaces use the header file, \fBxti.h\fR. \fBTLI\fR interfaces
should \fInot\fR use this header.  They should use the header:
.sp
.in +2
.nf
#include <tiuser.h>
.fi
.in -2

.SS "Error Description Values"
.LP
The \fBt_errno\fR values \fBTPROTO,\fR \fBTBADQLEN,\fR and \fBTQFULL\fR can be
set by the \fBXTI\fR interface but not by the \fBTLI\fR interface.
.sp
.LP
A \fBt_errno\fR value that this routine can return under different
circumstances than its \fBXTI\fR counterpart is \fBTBUFOVFLW\fR. It can be
returned even when the \fBmaxlen\fR field of the corresponding buffer has been
set to zero.
.SS "Option Buffers"
.LP
The format of the options in an \fBopt\fR buffer is dictated by the transport
provider. Unlike the \fBXTI\fR interface, the \fBTLI\fR interface does not fix
the buffer format.
.SH ATTRIBUTES
.LP
See \fBattributes\fR(5)  for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
MT Level	Safe
.TE

.SH SEE ALSO
.LP
\fBfcntl\fR(2), \fBt_accept\fR(3NSL), \fBt_alloc\fR(3NSL), \fBt_bind\fR(3NSL),
\fBt_connect\fR(3NSL), \fBt_open\fR(3NSL), \fBt_optmgmt\fR(3NSL),
\fBt_rcvconnect\fR(3NSL), \fBt_snddis\fR(3NSL), \fBattributes\fR(5)
.SH WARNINGS
.LP
Some transport providers do not differentiate between a connection indication
and the connection itself. If this is the case, a successful return of
\fBt_listen()\fR indicates an existing connection.
