.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Portions Copyright 1989 AT&T
.\" Copyright 1994, The X/Open Company Ltd.  All Rights Reserved.
.\" Portions Copyright (c) 1998, Sun Microsystems, Inc.  All Rights Reserved.
.\"
.TH T_RCVDIS 3NSL "May 7, 1998"
.SH NAME
t_rcvdis \- retrieve information from disconnection
.SH SYNOPSIS
.LP
.nf
#include <xti.h>



\fBint\fR \fBt_rcvdis\fR(\fBint\fR \fIfd\fR, \fBstruct t_discon *\fR\fIdiscon\fR);
.fi

.SH DESCRIPTION
.sp
.LP
This routine is part of the \fBXTI\fR interfaces which evolved from the
\fBTLI\fR interfaces. \fBXTI\fR represents the future evolution of these
interfaces. However, \fBTLI\fR interfaces are supported for compatibility. When
using a \fBTLI\fR routine that has the same name as an \fBXTI\fR routine, the
\fBtiuser.h\fR header file must be used.  Refer to the  \fBTLI\fR
\fBCOMPATIBILITY\fR section for a description of differences between the two
interfaces.
.sp
.LP
This function is used to identify the cause of a disconnection and to retrieve
any user data sent with the disconnection. The argument \fIfd\fR identifies the
local transport endpoint where the connection existed, and \fIdiscon\fR points
to a \fBt_discon\fR structure containing the following members:
.sp
.in +2
.nf
struct netbuf udata;
int reason;
int sequence;
.fi
.in -2

.sp
.LP
The field \fIreason\fR specifies the reason for the disconnection through a
protocol-dependent reason code, \fIudata\fR identifies any user data that was
sent with the disconnection, and \fIsequence\fR may identify an outstanding
connection indication with which the disconnection is associated.  The field
\fIsequence\fR is only meaningful when \fBt_rcvdis()\fR is issued by a passive
transport user who has executed one or more \fBt_listen\fR(3NSL) functions and
is processing the resulting connection indications. If a disconnection
indication occurs, \fIsequence\fR can be used to identify which of the
outstanding connection indications is associated with the disconnection.
.sp
.LP
The  \fImaxlen\fR field of  \fIudata\fR may be set to zero, if the user does
not care about incoming data. If, in addition, the user does not need to know
the value of  \fIreason\fR or  \fIsequence\fR, \fIdiscon\fR may be set to
\fINULL\fR and any user data associated with the disconnection indication shall
be discarded. However, if a user has retrieved more than one outstanding
connection indication by means of \fBt_listen\fR(3NSL), and \fIdiscon\fR is a
null pointer, the user will be unable to identify with which connection
indication the disconnection is associated.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, a value of  \fB0\fR is returned.  Otherwise, a
value of  -1 is returned and \fBt_errno\fR is set to indicate an error.
.SH VALID STATES
.sp
.LP
\fBT_DATAXFER\fR, \fBT_OUTCON\fR, \fBT_OUTREL\fR, \fBT_INREL\fR,
\fBT_INCON(ocnt > 0)\fR.
.SH ERRORS
.sp
.LP
On failure, \fBt_errno\fR is set to one of the following:
.sp
.ne 2
.na
\fB\fBTBADF\fR\fR
.ad
.RS 15n
The specified file descriptor does not refer to a transport endpoint.
.RE

.sp
.ne 2
.na
\fB\fBTBUFOVFLW\fR\fR
.ad
.RS 15n
The number of bytes allocated for incoming data \fI(maxlen)\fR is greater than
\fB0\fR but not sufficient to store the data.  If \fIfd\fR is a passive
endpoint with \fIocnt\fR > 1, it remains in state  \fBT_INCON;\fR otherwise,
the endpoint state is set to  \fBT_IDLE.\fR
.RE

.sp
.ne 2
.na
\fB\fBTNODIS\fR\fR
.ad
.RS 15n
No disconnection indication currently exists on the specified transport
endpoint.
.RE

.sp
.ne 2
.na
\fB\fBTNOTSUPPORT\fR\fR
.ad
.RS 15n
This function is not supported by the underlying transport provider.
.RE

.sp
.ne 2
.na
\fB\fBTOUTSTATE\fR\fR
.ad
.RS 15n
The communications endpoint referenced by  \fIfd\fR is not in one of the states
in which a call to this function is valid.
.RE

.sp
.ne 2
.na
\fB\fBTPROTO\fR\fR
.ad
.RS 15n
This error indicates that a communication problem has been detected between XTI
and the transport provider for which there is no other suitable XTI error
\fB(t_errno)\fR.
.RE

.sp
.ne 2
.na
\fB\fBTSYSERR\fR\fR
.ad
.RS 15n
A system error has occurred during execution of this function.
.RE

.SH TLI COMPATIBILITY
.sp
.LP
The \fBXTI\fR and \fBTLI\fR interface definitions have common names but use
different header files. This, and other semantic differences between the two
interfaces are described in the subsections below.
.SS "Interface Header"
.sp
.LP
The \fBXTI\fR interfaces use the header file, \fBxti.h\fR. \fBTLI\fR interfaces
should \fInot\fR use this header.  They should use the header:
.br
.in +2
#include <tiuser.h>
.in -2
.SS "Error Description Values"
.sp
.LP
The \fBt_errno\fR values \fBTPROTO\fR and \fBTOUTSTATE\fR can be set by the
\fBXTI\fR interface but not by the \fBTLI\fR interface.
.sp
.LP
A failure return, and a \fBt_errno\fR value that this routine can set under
different circumstances than its \fBXTI\fR counterpart is \fBTBUFOVFLW.\fR It
can be returned even when the \fBmaxlen\fR field of the corresponding buffer
has been set to zero.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5)  for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
MT Level	Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBt_alloc\fR(3NSL), \fBt_connect\fR(3NSL), \fBt_listen\fR(3NSL),
\fBt_open\fR(3NSL), \fBt_snddis\fR(3NSL), \fBattributes\fR(5)
