'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright 2013 Nexenta Systems, Inc.  All rights reserved.
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH SYSEVENTD 1M "Jan 31, 2013"
.SH NAME
syseventd \- kernel system event notification daemon
.SH SYNOPSIS
.LP
.nf
\fB/usr/lib/sysevent/syseventd\fR [\fB-d\fR \fIdebug_level\fR] [\fB-r\fR \fIrootdir\fR]
.fi

.SH DESCRIPTION
.sp
.LP
\fBsyseventd\fR is a user-level daemon that accepts delivery of system event
buffers from the kernel. Once an event buffer has been delivered to
\fBsyseventd\fR, it, in turn, attempts to propagate the event to all interested
end event subscribers.
.sp
.LP
Event subscribers take the form of a \fBsyseventd\fR loadable module
(\fBSLM\fR). \fBsyseventd\fR passes the event buffer to each of its subscribers
and in return expects a notification as to the successful or unsuccessful
delivery attempt.
.sp
.LP
Upon successful delivery of the event buffer to all interested event
subscribers, \fBsyseventd\fR frees the event buffer from the kernel event
queue.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.na
\fB\fB-d\fR \fIdebug_level\fR\fR
.ad
.RS 18n
Enable debug mode. Messages are printed to the invoking user's terminal.
.RE

.sp
.ne 2
.na
\fB\fB-r\fR \fIrootdir\fR\fR
.ad
.RS 18n
Cause \fBsyseventd\fR to use an alternate root path when creating its door and
lock files. Modules continue to be loaded from the standard module directories.
.RE

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.na
\fB\fB0\fR \fR
.ad
.RS 12n
Successful completion.
.RE

.sp
.ne 2
.na
\fB\fBnon-zero\fR\fR
.ad
.RS 12n
An error occurred.
.RE

.SH FILES
.sp
.ne 2
.na
\fB\fB/var/run/syseventd.lock\fR\fR
.ad
.sp .6
.RS 4n
daemon lock file
.RE

.sp
.ne 2
.na
\fB\fB/var/run/sysevent_door\fR \fR
.ad
.sp .6
.RS 4n
kernel to \fBsyseventd\fR door file
.RE

.sp
.ne 2
.na
\fB\fB/usr/lib/sysevent/modules\fR \fR
.ad
.sp .6
.RS 4n
\fBSLM\fR directory repository
.RE

.sp
.ne 2
.na
\fB\fB/usr/platform/\fR\fB`\fR\fBuname
\(emi\fR\fB`\fR\fB/lib/sysevent/modules\fR\fR
.ad
.sp .6
.RS 4n
\fBSLM\fR directory repository
.RE

.sp
.ne 2
.na
\fB\fB/usr/platform/\fR\fB`\fR\fBuname
\(emm\fR\fB`\fR\fB/lib/sysevent/modules\fR\fR
.ad
.sp .6
.RS 4n
\fBSLM\fR directory repository
.RE

.SH SEE ALSO
.sp
.LP
\fBsvcs\fR(1), \fBsvcadm\fR(1M), \fBsyseventconfd\fR(1M), \fBattributes\fR(5),
\fBsmf\fR(5)
.SH NOTES
.sp
.LP
The \fBsyseventd\fR service is managed by the service management facility,
\fBsmf\fR(5), under the service identifier:
.sp
.in +2
.nf
svc:/system/sysevent:default
.fi
.in -2
.sp

.sp
.LP
Administrative actions on this service, such as enabling, disabling, or
requesting restart, can be performed using \fBsvcadm\fR(1M). The service's
status can be queried using the \fBsvcs\fR(1) command.
