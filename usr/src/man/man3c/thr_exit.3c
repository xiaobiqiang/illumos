.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Portions Copyright (c) 1995 IEEE.  All Rights Reserved.
.\" Copyright (c) 2001, The IEEE and The Open Group.  All Rights Reserved.
.\" Copyright (c) 2007 Sun Microsystems, Inc.  All Rights Reserved
.\"
.TH THR_EXIT 3C "Nov 2, 2007"
.SH NAME
thr_exit \- terminate the calling thread
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR... ] \fIfile\fR...[ \fIlibrary\fR... ]
#include <thread.h>

\fBvoid\fR \fBthr_exit\fR(\fBvoid *\fR\fIstatus\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBthr_exit()\fR function terminates the calling thread, in a similar way
that \fBexit\fR(3C) terminates the calling process. If the calling thread is
not detached, then the thread's \fBID\fR and the exit status specified by
\fIstatus\fR are retained. The value \fIstatus\fR is then made available to any
successful join with the terminating thread (see \fBthr_join\fR(3C));
otherwise, \fIstatus\fR is disregarded allowing the thread's ID to be reclaimed
immediately.
.sp
.LP
Any cancellation cleanup handlers that have been pushed and not yet popped are
popped in the reverse order that they were pushed and then executed. After all
cancellation cleanup handlers have been executed, if the thread has any
thread-specific data, appropriate destructor functions will be called in an
unspecified order. Thread termination does not release any application visible
process resources, including, but not limited to, mutexes and file descriptors,
nor does it perform any process level cleanup actions, including, but not
limited to, calling any \fBatexit()\fR routines that might exist.
.sp
.LP
An exiting thread runs with all signals blocked. All thread termination
functions, including cancellation cleanup handlers and thread-specific data
destructor functions, are called with all signals blocked.
.sp
.LP
If any thread, including the  \fBmain()\fR thread, calls \fBthr_exit()\fR, only
that thread will exit.
.sp
.LP
If \fBmain()\fR returns or exits (either implicitly or explicitly), or any
thread explicitly calls \fBexit()\fR, the entire process will exit.
.sp
.LP
The behavior of \fBthr_exit()\fR is undefined if called from a cancellation
cleanup handler or destructor function that was invoked as a result of either
an implicit or explicit call to \fBthr_exit()\fR.
.sp
.LP
After a thread has terminated, the result of access to local (auto) variables
of the thread is undefined. Thus, references to local variables of the exiting
thread should not be used for the \fBthr_exit()\fR \fIstatus\fR parameter
value.
.sp
.LP
If any thread (except the \fBmain()\fR thread) implicitly or explicitly
returns, the result is the same as if the thread called \fBthr_exit()\fR and it
will return the value of \fIstatus\fR as the exit code.
.sp
.LP
The process will terminate with an exit status of \fB0\fR after the last
non-daemon thread has terminated (including the \fBmain()\fR thread). This
behavior is the same as if the application had called \fBexit()\fR with a
\fB0\fR argument at thread termination time.
.SH RETURN VALUES
.sp
.LP
The  \fBthr_exit()\fR function cannot return to its caller.
.SH ERRORS
.sp
.LP
No errors are defined.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
MT-Level	MT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBexit\fR(3C), \fBthr_create\fR(3C), \fBthr_join\fR(3C),
\fBthr_keycreate\fR(3C), \fBattributes\fR(5), \fBstandards\fR(5)
.SH NOTES
.sp
.LP
Although only POSIX implements cancellation, cancellation can be used with
Solaris threads, due to their interoperability.
.sp
.LP
The \fIstatus\fR argument should not reference any variables local to the
calling thread.
