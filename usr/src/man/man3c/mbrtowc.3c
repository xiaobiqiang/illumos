.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 1992, X/Open Company Limited. All Rights Reserved.
.\" Portions Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 2014 Garrett D'Amore <garrett@damore.org>
.\"
.TH MBRTOWC 3C "Jun 23, 2014"
.SH NAME
mbrtowc, mbrtowc_l \- convert a character to a wide-character code (restartable)
.SH SYNOPSIS
.LP
.nf
#include <wchar.h>

\fBsize_t\fR \fBmbrtowc\fR(\fBwchar_t *restrict\fR \fIpwc\fR, \fBconst char *restrict\fR \fIs\fR, \fBsize_t\fR \fIn\fR,
     \fBmbstate_t *restrict\fR \fIps\fR);
.fi
.LP
.nf
#include <wchar.h>
#include <xlocale.h>

\fBsize_t\fR \fBmbrtowc_l\fR(\fBwchar_t *restrict\fR \fIpwc\fR, \fBconst char *restrict\fR \fIs\fR, \fBsize_t\fR \fIn\fR,
     \fBmbstate_t *restrict\fR \fIps\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.SH DESCRIPTION
.LP
If
.I s
is a null pointer, the
.B mbrtowc()
function is equivalent to the call:
.sp
.in +2
.nf
\fBmbrtowc\fR(NULL, "", 1, \fIps\fR)
.fi
.in -2
.LP
Likewise, if
.I s
is a null pointer, the
.B mbrtowc_l()
function is equivalent to the call:
.sp
.in +2
.nf
\fBmbrtowc_l\fR(NULL, "", 1, \fIps\fR, \fIloc\fR);
.fi
.in -2
.LP
In these cases, the values of the arguments
.I pwc
and
.I n
are ignored.
.LP
If
.I s
is not a null pointer, these functions inspect at most
.I n
bytes beginning at the byte pointed to by
.I s
to determine the number of bytes needed to complete the next character
(including any shift sequences).  If the functions determine that the next
character is completed,
they determine the value of the corresponding wide-character and then, if
.I pwc
is not a null pointer, stores that value in the object pointed to by
.IR pwc .
If the corresponding wide-character is the null wide-character, the
resulting state described is the initial conversion state.
.LP
If
.I ps
is a null pointer, these functions use their own
internal
.B mbstate_t
object, which is initialized at program startup to the
initial conversion state. Otherwise, the
.B mbstate_t
object pointed to by
.I ps
is used to completely describe the current conversion state of the
associated character sequence. The system will behave as if no function defined
in the Reference Manual calls
.B mbrtowc()
or
.BR Bmbrtowc_l() .
.LP
The behavior of
.B mbrtowc()
is affected by the
.B LC_CTYPE
category of the current locale.  The
.B mbrtowc_l()
function is affected by the
.B LC_CTYPE
category of the specified
.I loc
locale object.  See
.B environ (5).
.SH RETURN VALUES
.LP
The
.B mbrtowc()
and
.B mbrtowc_l()
functions return the first of the following that applies:
.IP \fB0\fR
If the next
.I n
or fewer bytes complete the character that corresponds to
the null wide-character (which is the value stored).
.IP \fBpositive\fR
If the next
.I n
or fewer bytes complete a valid character (which is the
value stored); the value returned is the number of bytes that complete the
character.
.IP \fB(size_t)\(mi2\fR
If the next
.I n
bytes contribute to an incomplete but potentially valid
character, and all
.I n
bytes have been processed (no value is stored).
When
.I n
has at least the value of the
.B MB_CUR_MAX
macro, this case can only occur if
.I s
points at a sequence of redundant shift sequences
(for implementations with state-dependent encodings).
.IP \fB(size_t)\(mi1\fR
If an encoding error occurs, in which case the next \fIn\fR or fewer bytes do
not contribute to a complete and valid  character (no value is stored).  In
this case,
.B EILSEQ
is stored in
.B errno
and the conversion state is undefined.
.SH ERRORS
.LP
The
.B mbrtowc()
and
.B mbrtowc_l()
functions may fail if:
.IP \fBEINVAL\fR
The
.I ps
argument points to an object that contains an invalid conversion
state.
.IP \fBEILSEQ\fR
Invalid character sequence is detected.
.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	See below.
_
MT-Level	See below.
.TE

.LP
The
.B mbrtowc()
function is Standard.  The
.B mbrtowc_l()
function is Uncommitted.
.LP
If
.I ps
is a null pointer, these functions are Unsafe for use in
multithreaded applications.  Otherwise they are MT-Safe.
.SH SEE ALSO
.LP
.BR mbsinit (3C),
.BR newlocale (3C),
.BR setlocale (3C),
.BR uselocale (3C),
.BR attributes (5),
.BR environ (5),
.BR standards (5)
