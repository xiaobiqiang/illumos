.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1991, 1992, 1994, The X/Open Company Ltd.  All Rights Reserved.
.\" Copyright (c) 2001, The IEEE and The Open Group.  All Rights Reserved.
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\"
.TH PTHREAD_ATTR_INIT 3C "Dec 10, 2015"
.SH NAME
pthread_attr_init, pthread_attr_destroy \- initialize or destroy threads
attribute object
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR... ] \fIfile\fR... -lpthread [ \fIlibrary\fR... ]
#include <pthread.h>

\fBint\fR \fBpthread_attr_init\fR(\fBpthread_attr_t *\fR\fIattr\fR);
.fi

.LP
.nf
\fBint\fR \fBpthread_attr_destroy\fR(\fBpthread_attr_t *\fR\fIattr\fR);
.fi

.SH DESCRIPTION
.LP
The function \fBpthread_attr_init()\fR initializes a thread attributes object
\fIattr\fR with the default value for all of the individual attributes used by
a given implementation.
.sp
.LP
The resulting attribute object (possibly modified by setting individual
attribute values), when used by \fBpthread_create()\fR, defines the attributes
of the thread created. A single attributes object can be used in multiple
simultaneous calls to \fBpthread_create()\fR.
.sp
.LP
The \fBpthread_attr_init()\fR function initializes a thread attributes object (
\fIattr\fR) with the default value for each attribute as follows:
.sp

.sp
.TS
c c c
l l l .
Attribute	Default Value	Meaning of Default
_
\fIcontentionscope\fR	\fBPTHREAD_SCOPE_PROCESS\fR	resource competition within process
\fIdetachstate\fR	\fBPTHREAD_CREATE_JOINABLE\fR	joinable by other threads
\fIstackaddr\fR	\fBNULL\fR	stack allocated by system
\fIstacksize\fR	0	1 or 2 megabyte
\fIpriority\fR	0	priority of the thread
\fIpolicy\fR	\fBSCHED_OTHER\fR	traditional time-sharing policy
\fIinheritsched\fR	\fBPTHREAD_INHERIT_SCHED\fR	T{
scheduling policy and parameters are inherited from the creating thread
T}
\fIguardsize\fR	\fBPAGESIZE\fR	T{
size of guard area for a thread's created stack
T}
.TE

.sp
.LP
The \fBpthread_attr_destroy()\fR function destroys a thread attributes object (
\fIattr\fR), which cannot be reused until it is reinitialized. An
implementation may cause \fBpthread_attr_destroy()\fR to set \fIattr\fR to an
implementation-dependent invalid value. The behavior of using the attribute
after it has been destroyed is undefined.
.SH RETURN VALUES
.LP
Upon successful completion, \fBpthread_attr_init()\fR and
\fBpthread_attr_destroy()\fR return a value of  \fB0\fR. Otherwise, an error
number is returned to indicate the error.
.SH ERRORS
.LP
The  \fBpthread_attr_init()\fR function will fail if:
.sp
.ne 2
.na
\fB\fBENOMEM\fR\fR
.ad
.RS 10n
Insufficient memory exists to initialize the thread attributes object.
.RE

.sp
.LP
The  \fBpthread_attr_destroy()\fR function may fail if:
.sp
.ne 2
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
\fIattr\fR is invalid.
.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Committed
_
MT-Level	MT-Safe
_
Standard	See \fBstandards\fR(5).
.TE

.SH SEE ALSO
.LP
\fBsysconf\fR(3C), \fBpthread_attr_getdetachstate\fR(3C),
\fBpthread_attr_get_np\fR(3C),
\fBpthread_attr_getguardsize\fR(3C), \fBpthread_attr_getinheritsched\fR(3C),
\fBpthread_attr_getschedparam\fR(3C), \fBpthread_attr_getschedpolicy\fR(3C),
\fBpthread_attr_getscope\fR(3C), \fBpthread_attr_getstackaddr\fR(3C),
\fBpthread_attr_getstacksize\fR(3C), \fBpthread_attr_setdetachstate\fR(3C),
\fBpthread_attr_setguardsize\fR(3C), \fBpthread_attr_setinheritsched\fR(3C),
\fBpthread_attr_setschedparam\fR(3C), \fBpthread_attr_setschedpolicy\fR(3C),
\fBpthread_attr_setscope\fR(3C), \fBpthread_attr_setstackaddr\fR(3C),
\fBpthread_attr_setstacksize\fR(3C), \fBpthread_create\fR(3C),
\fBattributes\fR(5), \fBstandards\fR(5)
