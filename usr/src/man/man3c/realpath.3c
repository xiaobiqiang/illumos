.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2014, Joyent, Inc.
.\"
.TH REALPATH 3C "Dec 20, 2014"
.SH NAME
realpath \- resolve pathname
.SH SYNOPSIS
.LP
.nf
#include <stdlib.h>

\fBchar *\fR\fBrealpath\fR(\fBconst char *restrict\fR \fIfile_name\fR,
     \fBchar *restrict\fR \fIresolved_name\fR);

\fBchar *\fR\fBcanonicalize_file_name\fR(\fBconst char *\fR\fIpath\fR);
.fi

.SH DESCRIPTION
.LP
The \fBrealpath()\fR function derives, from the pathname pointed to by
\fIfile_name\fR, an absolute pathname that names the same file, whose
resolution does not involve "\fB\&.\fR", "\fB\&..\fR", or symbolic links. The
generated pathname is stored as a null-terminated string, up to a maximum of
{\fBPATH_MAX\fR} bytes (defined in \fBlimits.h\fR(3HEAD)), in the buffer
pointed to by \fIresolved_name\fR.
.sp
.LP
The \fBcanonicalize_file_name()\fR function is equivalent to calling
\fBrealpath\fR(\fIpath\fR, \fINULL\fR). This function is only provided for
compatibility.
.SH RETURN VALUES
.LP
On successful completion, \fBrealpath()\fR returns a pointer to the resolved
name.  Otherwise, \fBrealpath()\fR returns a null pointer and sets \fBerrno\fR
to indicate the error, and the contents of the buffer pointed to by
\fIresolved_name\fR are left in an indeterminate state.
.SH ERRORS
.LP
The \fBrealpath()\fR function will fail if:
.sp
.ne 2
.na
\fB\fBEACCES\fR\fR
.ad
.RS 16n
Read or search permission was denied for a component of \fIfile_name\fR.
.RE

.sp
.ne 2
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 16n
Either the \fIfile_name\fR or \fIresolved_name\fR argument is a null pointer.
.RE

.sp
.ne 2
.na
\fB\fBEIO\fR\fR
.ad
.RS 16n
An error occurred while reading from the file system.
.RE

.sp
.ne 2
.na
\fB\fBELOOP\fR\fR
.ad
.RS 16n
Too many symbolic links were encountered in resolving \fIfile_name\fR.
.RE

.sp
.ne 2
.na
\fB\fBELOOP\fR\fR
.ad
.RS 16n
A loop exists in symbolic links encountered during resolution of the
\fIfile_name\fR argument.
.RE

.sp
.ne 2
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
The \fIfile_name\fR argument is longer than {\fBPATH_MAX\fR} or a pathname
component is longer than {\fBNAME_MAX\fR}.
.RE

.sp
.ne 2
.na
\fB\fBENOENT\fR\fR
.ad
.RS 16n
A component of \fIfile_name\fR does not name an existing file or
\fIfile_name\fR points to an empty string.
.RE

.sp
.ne 2
.na
\fB\fBENOTDIR\fR\fR
.ad
.RS 16n
A component of the path prefix is not a directory.
.RE

.sp
.LP
The \fBrealpath()\fR function may fail if:
.sp
.ne 2
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
Pathname resolution of a symbolic link produced an intermediate result whose
length exceeds {\fBPATH_MAX\fR}.
.RE

.sp
.ne 2
.na
\fB\fBENOMEM\fR\fR
.ad
.RS 16n
Insufficient storage space is available.
.RE

.SH USAGE
.LP
The \fBrealpath()\fR function operates on null-terminated strings.
.sp
.LP
Execute permission is required for all the directories in the given and the
resolved path.
.sp
.LP
The \fBrealpath()\fR function might fail to return to the current directory if
an error occurs.
.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Standard
_
MT-Level	MT-Safe
.TE

.SH SEE ALSO
.LP
\fBgetcwd\fR(3C), \fBlimits.h\fR(3HEAD), \fBsysconf\fR(3C),
\fBattributes\fR(5), \fBstandards\fR(5)
