.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 1992, X/Open Company Limited. All Rights Reserved.
.\" Portions Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 2014 Garrett D'Amore <garrett@damore.org>
.\"
.TH MBRLEN 3C "Jun 21, 2014"
.SH NAME
mbrlen, mbrlen_l \- get number of bytes in a character (restartable)
.SH SYNOPSIS
.LP
.nf
#include <wchar.h>

\fBsize_t\fR \fBmbrlen\fR(\fBconst char *restrict\fR \fIs\fR, \fBsize_t\fR \fIn\fR, \fBmbstate_t *restrict\fR \fIps\fR);
.fi
.LP
.nf
#include <wchar.h>
#include <xlocale.h>

\fBsize_t\fR \fBmbrlen_l\fR(\fBconst char *restrict\fR \fIs\fR, \fBsize_t\fR \fIn\fR, \fBmbstate_t *restrict\fR \fIps\fR,
    \fBlocale_t\fR \fIloc\fR);
.fi
.SH DESCRIPTION
.LP
If \fIs\fR is not a null pointer,  \fBmbrlen()\fR and \fBmbrlen_l()\fR determine
the number of bytes constituting the character pointed to by \fIs\fR.
The call
.nf
.IP
\fBmbrlen\fR(\fIs\fR, \fIn\fR, \fIps\fR);
.fi
.LP
is equivalent to:
.nf
.IP
mbstate_t internal;
\fBmbrtowc\fR(NULL, \fIs\fR, \fIn\fR, \fIps\fR != NULL ? \fIps\fR : &internal);
.fi
.LP
If \fIps\fR is a null pointer, the \fBmbrlen()\fR and \fBmbrlen_l()\fR
functions use their own
internal \fBmbstate_t\fR object, which is initialized at program startup to the
initial conversion state.   Otherwise, the  \fBmbstate_t\fR object pointed to
by \fIps\fR is used to completely describe the current conversion state of the
associated character sequence. The implemenation will behave as if no function
defined in the Reference Manual calls \fBmbrlen()\fR.
.LP
The behavior of \fBmbrlen()\fR is affected by the \fBLC_CTYPE\fR category of the
current locale.  See \fBenviron\fR(5). The behavior of \fBmbrlen_l()\fR does not
use the current enivronment and instead uses the locale specified by \fBloc\fR.
.SH RETURN VALUES
.LP
The \fBmbrlen()\fR and \fBmbrlen_l()\fR functions return the first of the
following that applies:
.sp
.ne 2
.na
\fB\fB0\fR\fR
.ad
.RS 17n
If the next \fIn\fR or fewer bytes complete the character that corresponds to
the null wide-character.
.RE

.sp
.ne 2
.na
\fB\fBpositive\fR\fR
.ad
.RS 17n
If the next \fIn\fR or fewer bytes complete a valid character; the value
returned is the number of bytes that complete the character.
.RE

.sp
.ne 2
.na
\fB\fB(size_t)\(mi2\fR\fR
.ad
.RS 17n
If the next \fIn\fR bytes contribute to an incomplete but potentially valid
character, and all \fIn\fR bytes have been processed. When \fIn\fR has at least
the value of the \fBMB_CUR_MAX\fR macro, this case can only occur if  \fIs\fR
points at a sequence of redundant shift sequences (for implementations with
state-dependent encodings).
.RE

.sp
.ne 2
.na
\fB\fB(size_t)\(mi1\fR\fR
.ad
.RS 17n
If an encoding error occurs, in which case the next \fIn\fR or fewer bytes do
not contribute to a complete and valid  character.  In this case, \fBEILSEQ\fR
is stored in \fBerrno\fR and the conversion state is undefined.
.RE

.SH ERRORS
.LP
The \fBmbrlen()\fR and \fBmbrlen_l()\fR functions may fail if:
.sp
.ne 2
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
The \fIps\fR argument points to an object that contains an invalid conversion
state.
.RE

.sp
.ne 2
.na
\fB\fBEILSEQ\fR\fR
.ad
.RS 10n
Invalid character sequence is detected.
.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	See below.
_
MT-Level	MT-Safe
.TE

.LP
The
.B mbrlen()
function is Standard.  The
.B mbrlen_l()
function is Uncommitted.
.SH SEE ALSO
.LP
\fBmbrtowc\fR(3C), \fBmbsinit\fR(3C), \fBnewlocale\fR(3C),
\fBsetlocale\fR(3C), \fBattributes\fR(5),
\fBenviron\fR(5), \fBstandards\fR(5)
.SH NOTES
.sp
.LP
If \fIps\fR is not a null pointer, \fBmbrlen()\fR uses the \fBmbstate_t\fR
object pointed to by \fIps\fR and the function can be used safely in
multithreaded applications, as long as \fBsetlocale\fR(3C) is not being called
to change the locale or a per-thread locale has been installed on the calling
thread with \fBuselocale\fR(3C). If \fIps\fR is a null pointer, \fBmbrlen()\fR
uses its internal \fBmbstate_t\fR object and the function is Unsafe in
multithreaded applications.
