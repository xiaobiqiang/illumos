.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2001, The IEEE and The Open Group.  All Rights Reserved.
.\" Portions Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\"
.TH GETCWD 3C "Oct 18, 2004"
.SH NAME
getcwd \- get pathname of current working directory
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBchar *\fR\fBgetcwd\fR(\fBchar *\fR\fIbuf\fR, \fBsize_t\fR \fIsize\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBgetcwd()\fR function places an absolute pathname of the current working
directory in the array pointed to by \fIbuf\fR, and returns \fIbuf\fR. The
pathname copied to the array contains no components that are symbolic links.
The \fIsize\fR argument is the size in bytes of the character array pointed to
by \fIbuf\fR and must be at least one greater than the length of the pathname
to be returned.
.sp
.LP
If \fIbuf\fR is not a null pointer, the pathname is stored in the space pointed
to by \fIbuf\fR.
.sp
.LP
If \fIbuf\fR is a null pointer, \fBgetcwd()\fR obtains \fIsize\fR bytes of
space using \fBmalloc\fR(3C). The pointer returned by \fBgetcwd()\fR can be
used as the argument in a subsequent call to \fBfree()\fR.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBgetcwd()\fR returns the \fIbuf\fR argument. If
\fIbuf\fR is an invalid destination buffer address, \fINULL\fR is returned and
\fBerrno\fR is set to \fBEFAULT\fR. Otherwise, a null pointer is returned and
\fBerrno\fR is set to indicate the error.
.SH ERRORS
.sp
.LP
The \fBgetcwd()\fR function will fail if:
.sp
.ne 2
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 10n
The \fIbuf\fR argument is an invalid destination buffer address.
.RE

.sp
.ne 2
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
The \fIsize\fR argument is equal to 0.
.RE

.sp
.ne 2
.na
\fB\fBERANGE\fR\fR
.ad
.RS 10n
The \fIsize\fR argument is greater than 0 and less than the length of the
pathname plus 1.
.RE

.sp
.LP
The \fBgetcwd()\fR function may fail if:
.sp
.ne 2
.na
\fB\fBEACCES\fR\fR
.ad
.RS 10n
A parent directory cannot be read to get its name.
.RE

.sp
.ne 2
.na
\fB\fBENOMEM\fR\fR
.ad
.RS 10n
Insufficient storage space is available.
.RE

.SH EXAMPLES
.LP
\fBExample 1 \fRDetermine the absolute pathname of the current working
directory.
.sp
.LP
The following example returns a pointer to an array that holds the absolute
pathname of the current working directory. The pointer is returned in the
\fIptr\fR variable, which points to the \fIbuf\fR array where the pathname is
stored.

.sp
.in +2
.nf
#include <stdlib.h>
#include <unistd.h>
\&...
long size;
char *buf;
char *ptr;
size = pathconf(".", _PC_PATH_MAX);
if ((buf = (char *)malloc((size_t)size)) != NULL)
       ptr = getcwd(buf, (size_t)size);
\&...
.fi
.in -2

.LP
\fBExample 2 \fRPrint the current working directory.
.sp
.LP
The following example prints the current working directory.

.sp
.in +2
.nf
#include <unistd.h>
#include <stdio.h>

main(\|)
{
    char *cwd;
    if ((cwd = getcwd(NULL, 64)) == NULL) {
        perror("pwd");
        exit(2);
    }
    (void)printf("%s\en", cwd);
    free(cwd); /* free memory allocated by getcwd() */
    return(0);
}
.fi
.in -2

.SH USAGE
.sp
.LP
Applications should exercise care when using \fBchdir\fR(2) in conjunction with
\fBgetcwd()\fR. The current working directory is global to all threads within a
process. If more than one thread calls \fBchdir()\fR to change the working
directory, a subsequent call to \fBgetcwd()\fR could produce unexpected
results.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Standard
_
MT-Level	MT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBchdir\fR(2), \fBmalloc\fR(3C), \fBattributes\fR(5), \fBstandards\fR(5)
