'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2014, Joyent, Inc.
.\"  Copyright 1989 AT&T
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH LINK 2 "May 18, 2007"
.SH NAME
link, linkat \- link to a file
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBint\fR \fBlink\fR(\fBconst char *\fR\fIexisting\fR, \fBconst char *\fR\fInew\fR);
.fi
.LP
.nf
\fBint\fR \fBlinkat\fR(\fBint\fR \fIefd\fR, \fBconst char *\fR\fIexisting\fR, \fBint\fR \fInfd\fR,
    \fBconst char *\fR\fInew\fR, \fBint\fR \fIflag\fR);
.fi

.SH DESCRIPTION
.LP
The \fBlink()\fR and \fBlinkat()\fR functions create a new link (directory
entry) for the existing file and increments its link count by one.  The
\fIexisting\fR argument points to a path name naming an existing file.  The
\fInew\fR argument points to a pathname naming the new directory entry to be
created.
.sp
.LP
To create hard links, both files must be on the same file system. Both the old
and the new link share equal access and rights to the underlying object.
Privileged processes can make multiple links to a directory. Unless the caller
is privileged, the file named by \fIexisting\fR must not be a directory.
.sp
.LP
The \fBlinkat()\fR function is similar to \fBlink()\fR. If the path
\fIexisting\fR is a relative path, then the directory represented by \fIefd\fR
will be used as the starting point to resolve \fIexisting\fR. If the path
\fInew\fR is a relative path, then the directory represented by \fInfd\fR will
be used as the starting point to resolve \fInew\fR. Both \fIefd\fR and \fInfd\fR
may be the special value \fBAT_FDCWD\fR which causes the current working
directory to be used as the starting point for path resolution.
.sp
.LP
By default, \fBlinkat()\fR does not follow symbolic links. To cause it to follow
symbolic links, the value of \fIflag\fR should be \fBAT_SYMLINK_FOLLOW\fR.
.sp
.LP
Upon successful completion, \fBlink()\fR and \fBlinkat()\fR mark for update the
\fBst_ctime\fR field of the file. Also, the \fBst_ctime\fR and \fBst_mtime\fR
fields of the directory that contains the new entry are marked for update.
.SH RETURN VALUES
.LP
Upon successful completion, \fB0\fR is returned. Otherwise, \fB\(mi1\fR is
returned, no link is created, and \fBerrno\fR is set to indicate the error.
.SH ERRORS
.LP
The \fBlink()\fR and \fBlinkat()\fR functions will fail if:
.sp
.ne 2
.na
\fB\fBEACCES\fR\fR
.ad
.RS 16n
A component of either path prefix denies search permission, or the requested
link requires writing in a directory with a mode that denies write permission.
.RE

.sp
.ne 2
.na
\fB\fBEDQUOT\fR\fR
.ad
.RS 16n
The directory where the entry for the new link is being placed cannot be
extended because the user's quota of disk blocks on that file system has been
exhausted.
.RE

.sp
.ne 2
.na
\fB\fBEEXIST\fR\fR
.ad
.RS 16n
The link named by \fInew\fR exists.
.RE

.sp
.ne 2
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 16n
The \fIexisting\fR or \fInew\fR argument points to an illegal address.
.RE

.sp
.ne 2
.na
\fB\fBEILSEQ\fR\fR
.ad
.RS 16n
The path argument includes non-UTF8 characters and the file system accepts only
file names where all characters are part of the UTF-8 character codeset.
.RE

.sp
.ne 2
.na
\fB\fBEINTR\fR\fR
.ad
.RS 16n
A signal was caught during the execution of the \fBlink()\fR or \fBlinkat()\fR
functions.
.RE

.sp
.ne 2
.na
\fB\fBELOOP\fR\fR
.ad
.RS 16n
Too many symbolic links were encountered in translating \fIpath\fR.
.RE

.sp
.ne 2
.na
\fB\fBEMLINK\fR\fR
.ad
.RS 16n
The maximum number of links to a file would be exceeded.
.RE

.sp
.ne 2
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
The length of the \fIexisting\fR or \fInew\fR argument exceeds \fBPATH_MAX\fR,
or the length of a \fIexisting\fR or \fInew\fR component exceeds \fBNAME_MAX\fR
while \fB_POSIX_NO_TRUNC\fR is in effect.
.RE

.sp
.ne 2
.na
\fB\fBENOENT\fR\fR
.ad
.RS 16n
The \fIexisting\fR or \fInew\fR argument is a null pathname; a component of
either path prefix does not exist; or the file named by \fIexisting\fR does not
exist.
.RE

.sp
.ne 2
.na
\fB\fBENOLINK\fR\fR
.ad
.RS 16n
The \fIexisting\fR or \fInew\fR argument points to a remote machine and the
link to that machine is no longer active.
.RE

.sp
.ne 2
.na
\fB\fBENOSPC\fR\fR
.ad
.RS 16n
The directory that would contain the link cannot be extended.
.RE

.sp
.ne 2
.na
\fB\fBENOTDIR\fR\fR
.ad
.RS 16n
A component of either path prefix is not a directory.
.RE

.sp
.ne 2
.na
\fB\fBEPERM\fR\fR
.ad
.RS 16n
The file named by \fIexisting\fR is a directory and the
{\fBPRIV_SYS_LINKDIR\fR} privilege is not asserted in the effective set of the
calling process.
.sp
The effective user ID does not match the owner of the file and the
{\fBPRIV_FILE_LINK_ANY\fR} privilege is not asserted in the effective set of
the calling process.
.RE

.sp
.ne 2
.na
\fB\fBEROFS\fR\fR
.ad
.RS 16n
The requested link requires writing in a directory on a read-only file system.
.RE

.sp
.ne 2
.na
\fB\fBEXDEV\fR\fR
.ad
.RS 16n
The link named by \fInew\fR and the file named by \fIexisting\fR are on
different logical devices (file systems).
.RE

.sp
.LP
The \fBlinkat()\fR functions will fail if:
.sp
.ne 2
.na
.B EBADF
.ad
.RS 16n
If either \fIexisting\fR or \fInew\fR is a relative path and \fIefd\fR or
\fInfd\fR respectively are not a valid file descriptor or the value
\fBAT_FDCWD\fR.
.RE

.sp
.ne 2
.na
.B EINVAL
.ad
.RS 16n
An invalid value is set in \fIflag\fR. The only valid values are \fB0\fR and
\fBfBAT_SYMLINK_FOLLOW\fR.
.RE

.sp
.ne 2
.na
.B ENOTDIR
.ad
.RS 16n
If either \fIexisting\fR or \fInew\fR is a relative path and \fIefd\fR or
\fInfd\fR respectively refer to a valid descriptor which is not a directory.
.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Standard
_
MT-Level	Async-Signal-Safe
.TE

.SH SEE ALSO
.LP
\fBsymlink\fR(2), \fBunlink\fR(2), \fBattributes\fR(5), \fBprivileges\fR(5),
\fBstandards\fR(5)
