.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2001, The IEEE and The Open Group.  All Rights Reserved.
.\" Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved.
.\" Portions Copyright (c) 2013, OmniTI Computer Consulting, Inc.
.\" All Rights Reserved.
.\"
.TH PIPE 2 "Apr 19, 2013"
.SH NAME
pipe \- create an interprocess channel
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBint\fR \fBpipe\fR(\fBint\fR \fIfildes\fR[2]);

\fBint\fR \fBpipe2\fR(\fBint\fR \fIfildes\fR[2], \fBint\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBpipe()\fR and pipe2() functions create an I/O mechanism called a
pipe and returns two file descriptors, \fIfildes\fR[\fB0\fR] and
\fIfildes\fR[\fB1\fR]. The files associated with \fIfildes\fR[\fB0\fR]
and \fIfildes\fR[\fB1\fR] are streams and are both opened for reading and
writing.  The \fBpipe()\fR call will clear the \fBO_NDELAY\fR,
\fBO_NONBLOCK\fR, and \fBFD_CLOEXEC\fR flags on both file descriptors. The
\fBfcntl\fR(2) function can be used to set these flags.
.sp
.LP
The \fBpipe2()\fR call will clear the \fBO_NDELAY\fR on both filedescriptors.
The \fIflags\fR argument may be used to specify attributes on both file
descriptors.  \fBpipe2()\fR called with a \fIflags\fR value of 0 will
behave identically to \fBpipe()\fR.  Values for \fIflags\fR are constructed
by a bitwise-inclusive-OR of flags from the following list, defined in
<\fBfcntl.h\fR>.

.sp
.ne 2
.na
\fB\fBO_NONBLOCK\fR\fR
.ad
.RS 12n
Both file descriptors will be placed in non-blocking mode. This corresponds
to the \fBO_NONBLOCK\fR flag to \fBfcntl\fR(2).
.RE

.sp
.ne 2
.na
\fB\fBO_CLOEXEC\fR\fR
.ad
.RS 12n
Both file descriptors will be opened with the FD_CLOEXEC flag set. Both file
descriptors will be closed prior to any future exec() calls.
.RE

.sp
.LP
A read from \fIfildes\fR[\fB0\fR] accesses the data written to
\fIfildes\fR[\fB1\fR] on a first-in-first-out (FIFO) basis and a read from
\fIfildes\fR[\fB1\fR] accesses the data written to \fIfildes\fR[\fB0\fR] also
on a \fBFIFO\fR basis.
.sp
.LP
Upon successful completion \fBpipe()\fR marks for update the \fBst_atime\fR,
\fBst_ctime\fR, and \fBst_mtime\fR fields of the pipe.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fB0\fR is returned. Otherwise, \fB\(mi1\fR is
returned and \fBerrno\fR is set to indicate the error.
.SH ERRORS
.sp
.LP
The \fBpipe()\fR and \fBpipe2()\fR functions will fail if:
.sp
.ne 2
.na
\fB\fBEMFILE\fR\fR
.ad
.RS 10n
More than {\fBOPEN_MAX\fR} file descriptors are already in use by this process.
.RE

.sp
.ne 2
.na
\fB\fBENFILE\fR\fR
.ad
.RS 10n
The number of simultaneously open files in the system would exceed a
system-imposed limit.
.RE

.sp
.ne 2
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 10n
The \fIfildes[2]\fR argument points to an illegal address.
.RE

.sp
.LP
The \fBpipe2()\fR function will also fail if:
.sp
.ne 2
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
The \fIflags\fR argument is illegal. Valid \fIflags\fR are zero or a
bitwise inclusive-OR of \fBO_CLOEXEC\fR and \fBO_NONBLOCK\fR.
.RE


.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Standard
_
MT-Level	Async-Signal-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBsh\fR(1), \fBfcntl\fR(2), \fBfstat\fR(2), \fBgetmsg\fR(2), \fBpoll\fR(2),
\fBputmsg\fR(2), \fBread\fR(2), \fBwrite\fR(2), \fBopen\fR(2),
\fBattributes\fR(5), \fBstandards\fR(5), \fBstreamio\fR(7I)
.SH NOTES
.sp
.LP
Since a pipe is bi-directional, there are two separate flows of data.
Therefore, the size (\fBst_size\fR) returned by a call to \fBfstat\fR(2) with
argument  \fIfildes\fR[\fB0\fR] or \fIfildes\fR[\fB1\fR] is the number of bytes
available for reading from \fIfildes\fR[\fB0\fR] or \fIfildes\fR[\fB1\fR]
respectively. Previously, the size (\fBst_size\fR) returned by a call to
\fBfstat()\fR with argument \fIfildes\fR[\fB1\fR] (the write-end) was the
number of bytes available for reading from \fIfildes\fR[\fB0\fR] (the
read-end).
