.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\" Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\"
.TH ULIMIT 2 "Feb 1, 2003"
.SH NAME
ulimit \- get and set process limits
.SH SYNOPSIS
.LP
.nf
#include <ulimit.h>

\fBlong\fR \fBulimit\fR(\fBint\fR \fIcmd\fR, \fB/*\fR \fInewlimit\fR */...);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBulimit()\fR function provides for control over process limits. It is
effective in limiting the growth of regular files. Pipes are limited to
\fBPIPE_MAX\fR bytes.
.sp
.LP
The \fIcmd\fR values, defined in <\fBulimit.h\fR>, include:
.sp
.ne 2
.na
\fB\fBUL_GETFSIZE\fR\fR
.ad
.RS 15n
Return the soft file size limit of the process. The limit is in units of
512-byte blocks and is inherited by child processes. Files of any size can be
read. The return value is the integer part of the soft file size limit divided
by 512.  If the result cannot be represented as a \fBlong int\fR, the result is
unspecified.
.RE

.sp
.ne 2
.na
\fB\fBUL_SETFSIZE\fR\fR
.ad
.RS 15n
Set the hard and soft file size limits for output operations of the process to
the value of the second argument, taken as a \fBlong int\fR. Any process may
decrease its own hard limit, but only a process with appropriate privileges may
increase the limit. The new file size limit is returned. The hard and soft file
size limits are set to the specified value multiplied by 512.  If the result
would overflow an \fBrlimit_t\fR, the actual value set is unspecified.
.RE

.sp
.ne 2
.na
\fB\fBUL_GMEMLIM\fR\fR
.ad
.RS 15n
Get the maximum possible break value (see \fBbrk\fR(2)).
.RE

.sp
.ne 2
.na
\fB\fBUL_GDESLIM\fR\fR
.ad
.RS 15n
Get the current value of the maximum number of open files per process
configured in the system.
.RE

.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBulimit()\fR returns the value of the requested
limit.  Otherwise, \fB\(mi1\fR is returned, the limit is not changed, and
\fBerrno\fR is set to indicate the error.
.SH ERRORS
.sp
.LP
The \fBulimit()\fR function will fail if:
.sp
.ne 2
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
The \fIcmd\fR argument is not valid.
.RE

.sp
.ne 2
.na
\fB\fBEPERM\fR\fR
.ad
.RS 10n
A process that has not asserted {\fBPRIV_SYS_RESOURCE\fR} in its effective set
is trying to increase its file size limit.
.RE

.SH USAGE
.sp
.LP
Since all return values are permissible in a successful situation, an
application wishing to check for error situations should set \fBerrno\fR to 0,
then call \fBulimit()\fR, and if it returns \fB\(mi1\fR, check if \fBerrno\fR
is non-zero.
.sp
.LP
The \fBgetrlimit()\fR and \fBsetrlimit()\fR functions provide a more general
interface for controlling process limits, and are preferred over
\fBulimit()\fR. See \fBgetrlimit\fR(2).
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Standard
.TE

.SH SEE ALSO
.sp
.LP
\fBbrk\fR(2), \fBgetrlimit\fR(2), \fBwrite\fR(2), \fBattributes\fR(5),
\fBprivileges\fR(5), \fBstandards\fR(5)
