.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved.
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Copyright (c) 2014, Joyent, Inc.
.\"
.TH READLINK 2 "Dec 23, 2014"
.SH NAME
readlink \- read the contents of a symbolic link
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBssize_t\fR \fBreadlink\fR(\fBconst char *restrict\fR \fIpath\fR,
     \fBchar *restrict\fR \fIbuf\fR, \fBsize_t\fR \fIbufsiz\fR);
.fi
.LP
.nf
\fBssize_t\fR \fBreadlinkat\fR(\fBint\fR \fIfd\fR, \fBconst char *restrict\fR \fIpath\fR,
     \fBchar *restrict\fR \fIbuf\fR, \fBsize_t\fR \fIbufsiz\fR);
.fi

.SH DESCRIPTION
.LP
The \fBreadlink()\fR and \fBreadlinkat()\fR functions place the contents of the
symbolic link referred to by \fIpath\fR in the buffer \fIbuf\fR which has size
\fIbufsiz\fR.  If the number of bytes in the symbolic link is less than
\fIbufsiz\fR, the contents of the remainder of \fIbuf\fR are left unchanged. If
the \fIbuf\fR argument is not large enough to contain the link content, the
first \fIbufsize\fR bytes are placed in \fIbuf\fR.
.sp
.LP
The \fBrealinkat()\fR function behaves similarly to \fBreadlink()\fR; however,
when \fIpath\fR is a relative path, it is resolved relative to the directory
referred to by \fIfd\fR. To use the current working directory, \fIfd\fR should
be the special value \fBAT_FDCWD\fR.
.SH RETURN VALUES
.LP
Upon successful completion, \fBreadlink()\fR and \fBreadlinkat()\fR return the
count of bytes placed in the buffer.  Otherwise, they returns \fB\(mi1\fR, leave
the buffer unchanged, and set \fBerrno\fR to indicate the error.
.SH ERRORS
.LP
The \fBreadlink()\fR and \fBreadlinkat()\fR functions will fail if:
.sp
.ne 2
.na
\fB\fBEACCES\fR\fR
.ad
.RS 16n
Search permission is denied for a component of the path prefix of \fIpath\fR.
.RE

.sp
.ne 2
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 16n
\fIpath\fR or \fIbuf\fR points to an illegal address.
.RE

.sp
.ne 2
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 16n
The \fIpath\fR argument names a file that is not a symbolic link.
.RE

.sp
.ne 2
.na
\fB\fBEIO\fR\fR
.ad
.RS 16n
An I/O error occurred while reading from the file system.
.RE

.sp
.ne 2
.na
\fB\fBENOENT\fR\fR
.ad
.RS 16n
A component of \fIpath\fR does not name an existing file or \fIpath\fR is an
empty string.
.RE

.sp
.ne 2
.na
\fB\fBELOOP\fR\fR
.ad
.RS 16n
A loop exists in symbolic links encountered during resolution of the \fIpath\fR
argument.
.RE

.sp
.ne 2
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
The length of \fIpath\fR exceeds {\fBPATH_MAX\fR}, or a pathname component is
longer than {\fBNAME_MAX\fR} while \fB_POSIX_NO_TRUNC\fR is in effect.
.RE

.sp
.ne 2
.na
\fB\fBENOTDIR\fR\fR
.ad
.RS 16n
A component of the path prefix is not a directory. For \fBreadlinkat()\fR, if
\fIpath\fR is a relative path and \fIfd\fR refers to a valid file descriptor
which is not a directory.
.RE

.sp
.ne 2
.na
\fB\fBENOSYS\fR\fR
.ad
.RS 16n
The file system does not support symbolic links.
.RE

.sp
.LP
The \fBreadlinkat()\fR function will fail if:
.sp
.ne 2
.na
.B EBADF
.ad
.RS 16n
The \fIpath\fR argument is a relative path and \fIfd\fR is not a valid, open
file descriptor or the special value \fBAT_FDCWD\fR.
.RE

.sp
.LP
The \fBreadlink()\fR function may fail if:
.sp
.ne 2
.na
\fB\fBEACCES\fR\fR
.ad
.RS 16n
Read permission is denied for the directory.
.RE

.sp
.ne 2
.na
\fB\fBELOOP\fR\fR
.ad
.RS 16n
More than {\fBSYMLOOP_MAX\fR} symbolic links were encountered in resolving
\fIpath\fR.
.RE

.sp
.ne 2
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
As a result of encountering a symbolic link in resolution of the path argument,
the length of the substituted pathname string exceeded {\fBPATH_MAX\fR}.
.RE

.SH USAGE
.LP
Portable applications should not assume that the returned contents of the
symbolic link are null-terminated.
.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Standard
_
MT-Level	Async-Signal-Safe
.TE

.SH SEE ALSO
.LP
\fBstat\fR(2), \fBsymlink\fR(2), \fBattributes\fR(5), \fBstandards\fR(5)
