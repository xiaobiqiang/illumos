'\" te
.\"  Copyright (c) 1996 Sun Microsystems, Inc.  All Rights Reserved
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH TNFCTL_TRACE_STATE_SET 3TNF "Mar 4, 1997"
.SH NAME
tnfctl_trace_state_set, tnfctl_filter_state_set, tnfctl_filter_list_get,
tnfctl_filter_list_add, tnfctl_filter_list_delete \- control kernel tracing and
process filtering
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-ltnfctl\fR [ \fIlibrary\fR ... ]
#include <tnf/tnfctl.h>

\fBtnfctl_errcode_t\fR \fBtnfctl_trace_state_set\fR(\fBtnfctl_handle_t *\fR\fIhndl\fR,
     \fBboolean_t\fR \fItrace_state\fR);
.fi

.LP
.nf
\fBtnfctl_errcode_t\fR \fBtnfctl_filter_state_set\fR(\fBtnfctl_handle_t *\fR\fIhndl\fR,
     \fBboolean_t\fR \fIfilter_state\fR);
.fi

.LP
.nf
\fBtnfctl_errcode_t\fR \fBtnfctl_filter_list_get\fR(\fBtnfctl_handle_t *\fR\fIhndl\fR,
     \fBpid_t **\fR\fIpid_list\fR,\ \fBint *\fR\fIpid_count\fR);
.fi

.LP
.nf
\fBtnfctl_errcode_t\fR \fBtnfctl_filter_list_add\fR(\fBtnfctl_handle_t *\fR\fIhndl\fR,
     \fBpid_t\fR \fIpid_to_add\fR);
.fi

.LP
.nf
\fBtnfctl_errcode_t\fR \fBtnfctl_filter_list_delete\fR(\fBtnfctl_handle_t *\fR\fIhndl\fR,
     \fBpid_t\fR \fIpid_to_delete\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The interfaces to control kernel tracing and process filtering are used only
with kernel handles, handles created by \fBtnfctl_kernel_open\fR(3TNF). These
interfaces are used to change the tracing and filter  states for kernel
tracing.
.sp
.LP
\fBtnfctl_trace_state_set()\fR sets the kernel global tracing state to "on" if
\fItrace_state\fR is \fBB_TRUE,\fR or to "off" if \fItrace_state\fR is
\fBB_FALSE.\fR For the kernel,  \fItrace_state\fR is off by default.Probes that
are enabled will  not write out data unless this state is on. Use
\fBtnfctl_trace_attrs_get\fR(3TNF) to retrieve the current tracing state.
.sp
.LP
\fBtnfctl_filter_state_set()\fR sets the kernel process filtering state to "on"
if \fIfilter_state\fR is \fBB_TRUE,\fR or to "off" if \fIfilter_state\fR is
\fBB_FALSE.\fR \fIfilter_state\fR is off by default.  If it is on, only probe
points encountered  by processes in the process filter set by
\fBtnfctl_filter_list_add()\fR will generate trace points.  Use
\fBtnfctl_trace_attrs_get\fR(3TNF) to retrieve the current process filtering
state.
.sp
.LP
\fBtnfctl_filter_list_get()\fR returns the process filter list as an array in
\fIpid_list\fR. The count of elements in the process filter list is returned in
\fIpid_count\fR. The caller should use \fBfree\fR(3C) to free memory allocated
for the array \fIpid_list\fR.
.sp
.LP
\fBtnfctl_filter_list_add()\fR adds  \fIpid_to_add\fR to the process filter
list.  The process filter list is maintained even when the process filtering
state is off, but it has no effect unless the process filtering state is on.
.sp
.LP
\fBtnfctl_filter_list_delete()\fR deletes \fIpid_to_delete\fR from the process
filter list.  It returns an error if the process does  not exist or is not in
the filter list.
.SH RETURN VALUES
.sp
.LP
The interfaces \fBtnfctl_trace_state_set()\fR, \fBtnfctl_filter_state_set()\fR,
\fBtnfctl_filter_list_add()\fR, \fBtnfctl_filter_list_delete()\fR, and
\fBtnfctl_filter_list_get()\fR return \fBTNFCTL_ERR_NONE\fR upon success.
.SH ERRORS
.sp
.LP
The following error codes apply to \fBtnfctl_trace_state_set\fR:
.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_BADARG\fR\fR
.ad
.RS 24n
The handle is not a kernel handle.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_NOBUF\fR\fR
.ad
.RS 24n
Cannot turn on tracing without a buffer being allocated.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_BUFBROKEN\fR\fR
.ad
.RS 24n
Tracing is broken in the target.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_INTERNAL\fR\fR
.ad
.RS 24n
An internal error occurred.
.RE

.sp
.LP
The following error codes apply to \fBtnfctl_filter_state_set\fR:
.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_BADARG\fR\fR
.ad
.RS 23n
The handle is not a kernel handle.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_INTERNAL\fR\fR
.ad
.RS 23n
An internal error occurred.
.RE

.sp
.LP
The following error codes apply to \fBtnfctl_filter_list_add\fR:
.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_BADARG\fR\fR
.ad
.RS 24n
The handle is not a kernel handle.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_NOPROCESS\fR\fR
.ad
.RS 24n
No such process exists.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_ALLOCFAIL\fR\fR
.ad
.RS 24n
A memory allocation failure occurred.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_INTERNAL\fR\fR
.ad
.RS 24n
An internal error occurred.
.RE

.sp
.LP
The following error codes apply to \fBtnfctl_filter_list_delete\fR:
.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_BADARG\fR\fR
.ad
.RS 24n
The handle is not a kernel handle.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_NOPROCESS\fR\fR
.ad
.RS 24n
No such process exists.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_INTERNAL\fR\fR
.ad
.RS 24n
An internal error occurred.
.RE

.sp
.LP
The following error codes apply to  \fBtnfctl_filter_list_get\fR:
.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_BADARG\fR\fR
.ad
.RS 24n
The handle is not a kernel handle.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_ALLOCFAIL\fR\fR
.ad
.RS 24n
A memory allocation failure occurred.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_INTERNAL\fR\fR
.ad
.RS 24n
An internal error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
MT Level	MT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBprex\fR(1), \fBTNF_PROBE\fR(3TNF), \fBfree\fR(3C), \fBlibtnfctl\fR(3TNF),
\fBtnfctl_kernel_open\fR(3TNF), \fBtnfctl_trace_attrs_get\fR(3TNF),
\fBtracing\fR(3TNF), \fBtnf_kernel_probes\fR(4), \fBattributes\fR(5)
