'\" te
.\"  Copyright (c) 1996 Sun Microsystems, Inc.  All Rights Reserved
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH TNFCTL_CLOSE 3TNF "Mar 4, 1997"
.SH NAME
tnfctl_close \- close a tnfctl handle
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-ltnfctl\fR [ \fIlibrary\fR ... ]
#include <tnf/tnfctl.h>
\fBtnfctl_errcode_t\fR \fBtnfctl_close\fR(\fBtnfctl_handle_t *\fR\fIhndl\fR,
     \fBtnfctl_targ_op_t\fR \fIaction\fR);
.fi

.SH DESCRIPTION
.sp
.LP
\fBtnfctl_close()\fR is used to close a tnfctl handle and to free up the memory
associated with the handle.  When the handle is closed, the tracing state and
the states of the probes are not changed. \fBtnfctl_close()\fR can be used to
close handles in any mode, that is, whether they were created by
\fBtnfctl_internal_open\fR(3TNF), \fBtnfctl_pid_open\fR(3TNF),
\fBtnfctl_exec_open\fR(3TNF), \fBtnfctl_indirect_open\fR(3TNF), or
\fBtnfctl_kernel_open\fR(3TNF).
.sp
.LP
The \fIaction\fR argument is only used in direct mode, that is, if \fIhndl\fR
was created by \fBtnfctl_exec_open\fR(3TNF) or \fBtnfctl_pid_open\fR(3TNF). In
direct mode, \fIaction\fR specifies whether the process will proceed, be
killed, or remain suspended. \fIaction\fR may have the following values:
.sp
.ne 2
.na
\fB\fBTNFCTL_TARG_DEFAULT\fR\fR
.ad
.RS 23n
Kills the target process if  \fIhndl\fR was created with
\fBtnfctl_exec_open\fR(3TNF), but lets it continue if it was created with
\fBtnfctl_pid_open\fR(3TNF).
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_TARG_KILL\fR\fR
.ad
.RS 23n
Kills the target process.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_TARG_RESUME\fR\fR
.ad
.RS 23n
Allows the target process to continue.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_TARG_SUSPEND\fR\fR
.ad
.RS 23n
Leaves the target process suspended.  This is not a job control suspend. It is
possible to attach to the process again with a debugger or with the
\fBtnfctl_pid_open\fR(3TNF) interface.  The target process can also be
continued with \fBprun\fR(1).
.RE

.SH RETURN VALUES
.sp
.LP
\fBtnfctl_close()\fR returns \fBTNFCTL_ERR_NONE\fR upon success.
.SH ERRORS
.sp
.LP
The following error codes apply to \fBtnfctl_close()\fR:
.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_BADARG\fR\fR
.ad
.RS 23n
A bad argument was sent in  \fIaction\fR.
.RE

.sp
.ne 2
.na
\fB\fBTNFCTL_ERR_INTERNAL\fR\fR
.ad
.RS 23n
An internal error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
MT Level	MT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBprex\fR(1), \fBprun\fR(1), \fBTNF_PROBE\fR(3TNF), \fBlibtnfctl\fR(3TNF),
\fBtnfctl_exec_open\fR(3TNF), \fBtnfctl_indirect_open\fR(3TNF),
\fBtnfctl_kernel_open\fR(3TNF), \fBtnfctl_pid_open\fR(3TNF),
\fBtracing\fR(3TNF), \fBattributes\fR(5)
