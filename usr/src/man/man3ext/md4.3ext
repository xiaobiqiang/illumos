'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved.
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH MD4 3EXT "Nov 13, 2007"
.SH NAME
md4, MD4Init, MD4Update, MD4Final \- MD4 digest functions
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-lmd\fR [ \fIlibrary\fR ... ]
#include <md4.h>

\fBvoid\fR \fBMD4Init\fR(\fBMD4_CTX *\fR\fIcontext\fR);
.fi

.LP
.nf
\fBvoid\fR \fBMD4Update\fR(\fBMD4_CTX *\fR\fIcontext\fR, \fBunsigned char *\fR\fIinput\fR,
     \fBunsigned int\fR \fIinlen\fR);
.fi

.LP
.nf
\fBvoid\fR \fBMD4Final\fR(\fBunsigned char *\fR\fIoutput\fR, \fBMD4_CTX *\fR\fIcontext\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBMD4\fR functions implement the \fBMD4\fR message-digest algorithm. The
algorithm takes as input a message of arbitrary length and produces a
"fingerprint" or "message digest" as output. The \fBMD4\fR message-digest
algorithm is intended for digital signature applications in which large files
are "compressed" in a secure manner before being encrypted with a private
(secret) key under a public-key cryptosystem such as RSA.
.SS "\fBMD4Init()\fR, \fBMD4Update()\fR, \fBMD4Final()\fR"
.sp
.LP
The \fBMD4Init()\fR, \fBMD4Update()\fR, and \fBMD4Final()\fR functions allow an
\fBMD4\fR digest to be computed over multiple message blocks. Between blocks,
the state of the \fBMD4\fR computation is held in an \fBMD4\fR context
structure allocated by the caller. A complete digest computation consists of
calls to \fBMD4\fR functions in the following order: one call to
\fBMD4Init()\fR, one or more calls to \fBMD4Update()\fR, and one call to
\fBMD4Final()\fR.
.sp
.LP
The \fBMD4Init()\fR function initializes the \fBMD4\fR context structure
pointed to by \fIcontext\fR.
.sp
.LP
The \fBMD4Update()\fR function computes a partial \fBMD4\fR digest on the
\fIinlen\fR-byte message block pointed to by \fIinput\fR, and updates the
\fBMD4\fR context structure pointed to by \fIcontext\fR accordingly.
.sp
.LP
The \fBMD4Final()\fR function generates the final \fBMD4\fR digest, using the
\fBMD4\fR context structure pointed to by \fIcontext\fR. The \fBMD4\fR digest
is written to output. After a call to \fBMD4Final()\fR, the state of the
context structure is undefined. It must be reinitialized with \fBMD4Init()\fR
before it can be used again.
.SH RETURN VALUES
.sp
.LP
These functions do not return a value.
.SH SECURITY
.sp
.LP
The \fBMD4\fR digest algorithm is not currently considered cryptographically
secure. It is included in \fBlibmd\fR(3LIB) for use by legacy protocols and
systems only. It should not be used by new systems or protocols.
.SH EXAMPLES
.LP
\fBExample 1 \fRAuthenticate a message found in multiple buffers
.sp
.LP
The following is a sample function that must authenticate a message that is
found in multiple buffers. The calling function provides an authentication
buffer that will contain the result of the \fBMD4\fR digest.

.sp
.in +2
.nf
#include <sys/types.h>
#include <sys/uio.h>
#include <md4.h>

int
AuthenticateMsg(unsigned char *auth_buffer, struct iovec
                *messageIov, unsigned int num_buffers)
{
    MD4_CTX ctx;
    unsigned int i;

    MD4Init(&ctx);

    for(i=0; i<num_buffers; i++)
    {
         MD4Update(&ctx, messageIov->iov_base,
                   messageIov->iov_len);
         messageIov += sizeof(struct iovec);
    }

    MD4Final(auth_buffer, &ctx);

    return 0;
}
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Committed
_
MT-Level	MT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBlibmd\fR(3LIB)
.sp
.LP
RFC 1320
