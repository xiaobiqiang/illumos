'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc. All Rights Reserved.
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH CRYPT_SUNMD5 5 "Dec 23, 2003"
.SH NAME
crypt_sunmd5 \- password hashing module using MD5 message hash algorithm
.SH SYNOPSIS
.LP
.nf
\fB/usr/lib/security/$ISA/crypt_sunmd5.so\fR
.fi

.SH DESCRIPTION
.sp
.LP
The \fBcrypt_sunmd5\fR module is a one-way password hashing module for use with
\fBcrypt\fR(3C) that uses the MD5 message hash algorithm. The algorithm
identifier for \fBcrypt.conf\fR(4) and \fBpolicy.conf\fR(4) is \fBmd5\fR.
.sp
.LP
This module is designed to make it difficult to crack passwords that use brute
force attacks based on high speed MD5 implementations that use code inlining,
unrolled loops, and table lookup.
.sp
.LP
The maximum password length for \fBcrypt_sunmd5\fR is 255 characters.
.sp
.LP
The following options can be passed to the module by means of
\fBcrypt.conf\fR(4):
.sp
.ne 2
.na
\fB\fBrounds=\fR\fI<positive_number>\fR\fR
.ad
.RS 28n
Specifies the number of additional rounds of MD5 to use in generation of the
salt; the default number of rounds is 4096. Negative values have no effect and
are ignored, that is, the number of rounds cannot be lowered below 4096.
.sp
The number of additional rounds is stored in the salt string returned by
\fBcrypt_gensalt\fR(3C). For example:
.sp
.in +2
.nf
$md5,rounds=1000$nlxmTTpz$
.fi
.in -2

When \fBcrypt_gensalt\fR(3C) is being used to generate a new salt, if the
number of additional rounds configured in \fBcrypt.conf\fR(4) is greater than
that in the old salt, the value from \fBcrypt.conf\fR(4) is used instead. This
allows for migration to stronger (but more time-consuming) salts on password
change.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
MT-Level	Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBpasswd\fR(1), \fBcrypt\fR(3C), \fBcrypt_genhash_impl\fR(3C),
\fBcrypt_gensalt\fR(3C), \fBcrypt_gensalt_impl\fR(3C), \fBgetpassphrase\fR(3C),
\fBcrypt.conf\fR(4), \fBpasswd\fR(4), \fBpolicy.conf\fR(4), \fBattributes\fR(5)
