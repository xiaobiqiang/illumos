'\" te
.\" This manual page is derived from the DAT/uDAPL 1.2 specification.
.\" Portions Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH DAT_EVD_SET_UNWAITABLE 3DAT "Jul 16, 2004"
.SH NAME
dat_evd_set_unwaitable \- transition the Event Dispatcher into an unwaitable
state
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-ldat\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <\fBdat/udat.h\fR>

DAT_RETURN
    dat_evd_set_unwaitable(
    IN    DAT_EVD_HANDLE    \fIevd_handle\fR
    )
.fi

.SH PARAMETERS
.sp
.ne 2
.na
\fB\fIevd_handle\fR\fR
.ad
.RS 14n
Handle for an instance of Event Dispatcher.
.RE

.SH DESCRIPTION
.sp
.LP
The \fBdat_evd_set_unwaitable()\fR transitions the Event Dispatcher into an
unwaitable state. In this state, calls to \fBdat_evd_wait\fR(3DAT) return
synchronously with a \fBDAT_INVALID_STATE\fR error, and threads already blocked
in \fBdat_evd_wait()\fR are awakened and return with a \fBDAT_INVALID_STATE\fR
error without any further action by the Consumer. The actual state of the Event
Dispatcher is accessible through \fBdat_evd_query\fR(3DAT) and is
\fBDAT_EVD_UNWAITABLE\fR after the return of this operation.
.sp
.LP
This call does not affect a CNO associated with this EVD at all. Events
arriving on the EVD after it is set unwaitable still trigger the CNO (if
appropriate), and can be retrieved with \fBdat_evd_dequeue\fR(3DAT). Because
events can arrive normally on the EVD, the EVD might overflow; the Consumer is
expected to protect against this possibility.
.SH RETURN VALUES
.sp
.ne 2
.na
\fB\fBDAT_SUCCESS\fR\fR
.ad
.RS 22n
The operation was successful.
.RE

.sp
.ne 2
.na
\fB\fBDAT_INVALID_HANDLE\fR\fR
.ad
.RS 22n
The \fIevd_handle\fR parameter is invalid.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Standard: uDAPL, 1.1, 1.2
_
MT-Level	Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBdat_evd_clear_unwaitable\fR(3DAT), \fBdat_evd_dequeue\fR(3DAT),
\fBdat_evd_query\fR(3DAT), \fBdat_evd_wait\fR(3DAT), \fBlibdat\fR(3LIB),
\fBattributes\fR(5)
