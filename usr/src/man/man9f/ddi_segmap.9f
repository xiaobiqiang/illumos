'\" te
.\"  Copyright (c) 1996, Sun Microsystems, Inc.  All Rights Reserved
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH DDI_SEGMAP 9F "Nov 17, 2003"
.SH NAME
ddi_segmap, ddi_segmap_setup \- set up a user mapping using seg_dev
.SH SYNOPSIS
.LP
.nf
#include <sys/conf.h>
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBint\fR \fBddi_segmap\fR(\fBdev_t\fR \fIdev\fR, \fBoff_t\fR \fIoffset\fR, \fBstruct as *\fR\fIasp\fR,
     \fBcaddr_t *\fR\fIaddrp\fR, \fBoff_t\fR \fIlen\fR, \fBuint_t\fR \fIprot\fR,
     \fBuint_t\fR \fImaxprot\fR, \fBuint_t\fR \fIflags\fR, \fBcred_t\fR \fI*credp\fR);
.fi

.LP
.nf
\fBint\fR \fBddi_segmap_setup\fR(\fBdev_t\fR \fIdev\fR, \fBoff_t\fR \fIoffset\fR, \fBstruct as *\fR\fIasp\fR,
     \fBcaddr_t *\fR\fIaddrp\fR, \fBoff_t\fR \fIlen\fR, \fBuint_t\fR \fIprot\fR,
     \fBuint_t\fR \fImaxprot\fR, \fBuint_t\fR \fIflags\fR, \fBcred_t\fR \fI*credp\fR,
     \fBddi_device_acc_attr_t\fR \fI*accattrp\fR, \fBuint_t\fR \fIrnumber\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
These interfaces are obsolete. See \fBdevmap\fR(9E) for an alternative to
\fBddi_segmap()\fR. Use \fBdevmap_setup\fR(9F) instead of
\fBddi_segmap_setup()\fR.
.SH PARAMETERS
.sp
.ne 2
.na
\fB\fIdev\fR \fR
.ad
.RS 12n
The device whose memory is to be mapped.
.RE

.sp
.ne 2
.na
\fB\fIoffset\fR \fR
.ad
.RS 12n
The offset within device memory at which the mapping begins.
.RE

.sp
.ne 2
.na
\fB\fIasp\fR \fR
.ad
.RS 12n
An opaque pointer to the user address space into which the device memory should
be mapped.
.RE

.sp
.ne 2
.na
\fB\fIaddrp\fR \fR
.ad
.RS 12n
Pointer to the starting address within the user address space to which the
device memory should be mapped.
.RE

.sp
.ne 2
.na
\fB\fIlen\fR \fR
.ad
.RS 12n
Length (in bytes) of the memory to be mapped.
.RE

.sp
.ne 2
.na
\fB\fIprot\fR \fR
.ad
.RS 12n
A bit field that specifies the protections. Some combinations of possible
settings are:
.sp
.ne 2
.na
\fB\fBPROT_READ\fR \fR
.ad
.RS 15n
Read access is desired.
.RE

.sp
.ne 2
.na
\fB\fBPROT_WRITE\fR \fR
.ad
.RS 15n
Write access is desired.
.RE

.sp
.ne 2
.na
\fB\fBPROT_EXEC\fR \fR
.ad
.RS 15n
Execute access is desired.
.RE

.sp
.ne 2
.na
\fB\fBPROT_USER\fR \fR
.ad
.RS 15n
User-level access is desired (the mapping is being done as a result of a
\fBmmap\fR(2) system call).
.RE

.sp
.ne 2
.na
\fB\fBPROT_ALL\fR \fR
.ad
.RS 15n
All access is desired.
.RE

.RE

.sp
.ne 2
.na
\fB\fImaxprot\fR \fR
.ad
.RS 12n
Maximum protection flag possible for attempted mapping (the \fBPROT_WRITE\fR
bit may be masked out if the user opened the special file read-only). If
\fB(maxprot & prot) != prot\fR then there is an access violation.
.RE

.sp
.ne 2
.na
\fB\fIflags\fR \fR
.ad
.RS 12n
Flags indicating type of mapping. Possible values are (other bits may be set):
.sp
.ne 2
.na
\fB\fBMAP_PRIVATE\fR \fR
.ad
.RS 16n
Changes are private.
.RE

.sp
.ne 2
.na
\fB\fBMAP_SHARED\fR \fR
.ad
.RS 16n
Changes should be shared.
.RE

.sp
.ne 2
.na
\fB\fBMAP_FIXED\fR \fR
.ad
.RS 16n
The user specified an address in  \fI*addrp\fR rather than letting the system
pick and address.
.RE

.RE

.sp
.ne 2
.na
\fB\fIcredp\fR \fR
.ad
.RS 12n
Pointer to user credential structure.
.RE

.SS "ddi_segmap_setup(\|)"
.sp
.ne 2
.na
\fB\fIdev_acc_attr\fR \fR
.ad
.RS 17n
Pointer to a \fBddi_device_acc_attr\fR(9S) structure which contains the device
access attributes to apply to this mapping.
.RE

.sp
.ne 2
.na
\fB\fIrnumber\fR \fR
.ad
.RS 17n
Index number to the register address space set.
.RE

.SH DESCRIPTION
.sp
.LP
Future releases of Solaris will provide this function for binary  and source
compatibility.  However, for increased functionality, use
\fBddi_devmap_segmap\fR(9F) instead.  See  \fBddi_devmap_segmap\fR(9F) for
details.
.sp
.LP
\fBddi_segmap\fR(\|) and \fBddi_segmap_setup()\fR set up user mappings to
device space. When setting up the mapping, the  \fBddi_segmap\fR(\|) and
\fBddi_segmap_setup()\fR routines call the \fBmmap\fR(9E) entry point to
validate the range to be mapped.  When a user process accesses the mapping, the
drivers \fBmmap\fR(9E) entry point is again called to retrieve the page frame
number that needs to be loaded.  The mapping translations for that page are
then loaded on behalf of the driver by the DDI framework.
.sp
.LP
\fBddi_segmap()\fR is typically used as the \fBsegmap\fR(9E) entry in the
\fBcb_ops\fR(9S) structure for those devices that do not choose to provide
their own  \fBsegmap\fR(9E) entry point. However, some drivers may have their
own \fBsegmap\fR(9E) entry point to do some initial processing on the
parameters and then call \fBddi_segmap()\fR to establish the default memory
mapping.
.sp
.LP
\fBddi_segmap_setup()\fR is used in the drivers \fBsegmap\fR(9E) entry point to
set up the mapping and assign device access attributes to that mapping.
\fIrnumber\fR specifies the register  set representing the range of device
memory being mapped. See  \fBddi_device_acc_attr\fR(9S) for details regarding
what device access attributes are available.
.sp
.LP
\fBddi_segmap_setup()\fR cannot be used directly in the \fBcb_ops\fR(9S)
structure and requires a driver to have a \fBsegmap\fR(9E) entry point.
.SH RETURN VALUES
.sp
.LP
\fBddi_segmap()\fR and \fBddi_segmap_setup()\fR return the following values:
.sp
.ne 2
.na
\fB\fB0\fR \fR
.ad
.RS 12n
Successful completion.
.RE

.sp
.ne 2
.na
\fB\fBNon-zero\fR\fR
.ad
.RS 12n
An error occurred. In particular, they return \fBENXIO\fR if the range to be
mapped is invalid.
.RE

.SH CONTEXT
.sp
.LP
\fBddi_segmap()\fR and \fBddi_segmap_setup()\fR can be called from user or
kernel context only.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for a description of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Stability Level	Obsolete
.TE

.SH SEE ALSO
.sp
.LP
\fBmmap\fR(2), \fBattributes\fR(5), \fBdevmap\fR(9E), \fBmmap\fR(9E),
\fBsegmap\fR(9E), \fBdevmap_setup\fR(9F), \fBcb_ops\fR(9S),
\fBddi_device_acc_attr\fR(9S)
.sp
.LP
\fIWriting Device Drivers\fR
