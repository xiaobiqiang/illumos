'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc.,  All Rights Reserved.
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH PM_BUSY_COMPONENT 9F "Jul 21, 2004"
.SH NAME
pm_busy_component, pm_idle_component \- control device component availability
for Power Management
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBint\fR \fBpm_busy_component\fR(\fBdev_info_t\fR \fI*dip\fR, \fBint\fR \fIcomponent\fR);
.fi

.LP
.nf
\fBint\fR \fBpm_idle_component\fR(\fBdev_info_t\fR \fI*dip\fR, \fBint\fR \fIcomponent\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI)
.SH PARAMETERS
.sp
.ne 2
.na
\fB\fIdip\fR\fR
.ad
.RS 13n
Pointer to the device's \fBdev_info\fR structure.
.RE

.sp
.ne 2
.na
\fB\fIcomponent\fR\fR
.ad
.RS 13n
The number of the component to be power-managed.
.RE

.SH DESCRIPTION
.sp
.LP
The \fBpm_busy_component()\fR function sets \fIcomponent\fR of \fIdip\fR to be
busy. Calls to \fBpm_busy_component()\fR are stacked, requiring a corresponding
number of calls to \fBpm_idle_component()\fR to make the component idle again.
When a device is busy it will not be power-managed by the system.
.sp
.LP
The \fBpm_idle_component()\fR function marks \fIcomponent\fR idle, recording
the time that \fIcomponent\fR went idle. This function must be called once for
each call to \fBpm_busy_component()\fR. A component which is idle is available
to be power-managed by the system. The \fBpm_idle_component()\fR function has
no effect if the component is already idle, except to update the system's
notion of when the device went idle.
.sp
.LP
If these functions are called as a result of entry into the driver's
\fBattach\fR(9E), \fBdetach\fR(9E) or \fBpower\fR(9E) entry point, these
functions must be called from the same thread which entered \fBattach\fR(9E),
\fBdetach\fR(9E) or \fBpower\fR(9E).
.SH RETURN VALUES
.sp
.LP
The \fBpm_busy_component()\fR and \fBpm_idle_component()\fR functions return:
.sp
.ne 2
.na
\fB\fBDDI_SUCCESS\fR\fR
.ad
.RS 15n
Successfully set the indicated component busy or idle.
.RE

.sp
.ne 2
.na
\fB\fBDDI_FAILURE\fR\fR
.ad
.RS 15n
Invalid component number \fIcomponent\fR or the device has no components.
.RE

.SH CONTEXT
.sp
.LP
These functions can be called from user or kernel context. These functions may
also be called from interrupt context, providing they are not the first Power
Management function called by the driver.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface stability	Committed
.TE

.SH SEE ALSO
.sp
.LP
\fBpower.conf\fR(4), \fBpm\fR(7D), \fBattach\fR(9E), \fBdetach\fR(9E),
\fBpower\fR(9E), \fBpm_raise_power\fR(9F), \fBpm\fR(9P),
\fBpm-components\fR(9P)
.sp
.LP
\fIWriting Device Drivers\fR
