'\" te
.\"  Copyright 1989 AT&T
.\"  Copyright (c) 2006, Sun Microsystems, Inc.  All Rights Reserved
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH DATAMSG 9F "Jan 16, 2006"
.SH NAME
datamsg \- test whether a message is a data message
.SH SYNOPSIS
.LP
.nf
#include <sys/stream.h>
#include <sys/ddi.h>



\fBint\fR \fBdatamsg\fR(\fBunsigned char\fR \fItype\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Architecture independent level 1 (DDI/DKI).
.SH PARAMETERS
.sp
.ne 2
.na
\fB\fItype\fR\fR
.ad
.RS 8n
The type of message to be tested. The \fBdb_type\fR field of the
\fBdatab\fR(9S) structure contains the message type. This field may be accessed
through the message block using \fBmp->b_datap->db_type\fR.
.RE

.SH DESCRIPTION
.sp
.LP
The \fBdatamsg()\fR function tests the type of message to determine if it is a
data message type (\fBM_DATA\fR, \fBM_DELAY\fR, \fBM_PROTO\fR , or
\fBM_PCPROTO\fR).
.SH RETURN VALUES
.sp
.LP
\fBdatamsg\fR returns
.sp
.ne 2
.na
\fB\fB1\fR\fR
.ad
.RS 5n
if the message is a data message
.RE

.sp
.ne 2
.na
\fB\fB0\fR\fR
.ad
.RS 5n
otherwise.
.RE

.SH CONTEXT
.sp
.LP
The \fBdatamsg()\fR function can be called from user, interrupt, or kernel
context.
.SH EXAMPLES
.sp
.LP
The \fBput\fR(9E) routine enqueues all data messages for handling by the
\fBsrv\fR(9E) (service) routine. All non-data messages are handled in the
\fBput\fR(9E) routine.
.sp
.in +2
.nf
1 \fIxxx\fRput(q, mp)
2      queue_t *q;
3      mblk_t *mp;
4 {
5    if (datamsg(mp->b_datap->db_type)) {
6            putq(q, mp);
7            return;
8    }
9    switch (mp->b_datap->db_type) {
10    case M_FLUSH:
		       \&.\|.\|.
11    }
12 }
.fi
.in -2

.SH SEE ALSO
.sp
.LP
\fBput\fR(9E), \fBsrv\fR(9E), \fBallocb\fR(9F), \fBdatab\fR(9S), \fBmsgb\fR(9S)
.sp
.LP
\fIWriting Device Drivers\fR
.sp
.LP
\fISTREAMS Programming Guide\fR
