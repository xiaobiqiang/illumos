'\" te
.\"  Copyright (c) 1996, Sun Microsystems, Inc.  All Rights Reserved
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH CSX_PARSE_CISTPL_CONFIG 9F "Dec 20, 1996"
.SH NAME
csx_Parse_CISTPL_CONFIG \- parse Configuration tuple
.SH SYNOPSIS
.LP
.nf
#include <sys/pccard.h>



\fBint32_t\fR \fBcsx_Parse_CISTPL_CONFIG\fR(\fBclient_handle_t\fR \fIch\fR, \fBtuple_t *\fR\fItu\fR,
     \fBcistpl_config_t *\fR\fIcc\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris \fBDDI \fRSpecific (Solaris \fBDDI) \fR
.SH PARAMETERS
.sp
.ne 2
.na
\fB\fIch\fR\fR
.ad
.RS 6n
Client handle returned from \fBcsx_RegisterClient\fR(9F).
.RE

.sp
.ne 2
.na
\fB\fItu\fR\fR
.ad
.RS 6n
Pointer to a \fBtuple_t\fR structure (see \fBtuple\fR(9S)) returned by a call
to \fBcsx_GetFirstTuple\fR(9F) or \fBcsx_GetNextTuple\fR(9F).
.RE

.sp
.ne 2
.na
\fB\fIcc\fR\fR
.ad
.RS 6n
Pointer to a \fBcistpl_config_t\fR structure which contains the parsed
\fBCISTPL_CONFIG\fR tuple information upon return from this function.
.RE

.SH DESCRIPTION
.sp
.LP
This function parses the Configuration tuple, \fBCISTPL_CONFIG,\fR into a form
usable by \fBPC \fRCard drivers. The \fBCISTPL_CONFIG\fR tuple is used to
describe the general characteristics of 16-bit \fBPC \fRCards containing \fBI/O
\fRdevices or using custom interfaces. It may also describe \fBPC \fRCards,
including Memory Only cards, which exceed nominal power supply specifications,
or which need descriptions of their power requirements or other information.
.SH STRUCTURE MEMBERS
.sp
.LP
The structure members of \fBcistpl_config_t\fR are:
.sp
.in +2
.nf
uint32_t     present;     /* register present flags */
uint32_t     nr;          /* number of config registers found */
uint32_t     hr;          /* highest config register index found */
uint32_t     regs[CISTPL_CONFIG_MAX_CONFIG_REGS];    /* reg offsets */
uint32_t     base;        /* base offset of config registers */
uint32_t     last;        /* last config index */
.fi
.in -2

.sp
.LP
The fields are defined as follows:
.sp
.ne 2
.na
\fB\fBpresent\fR\fR
.ad
.RS 11n
This field indicates which configuration registers are present on the \fBPC
\fRCard.
.sp
.ne 2
.na
\fBCONFIG_OPTION_REG_PRESENT\fR
.ad
.RS 30n
Configuration Option Register present
.RE

.sp
.ne 2
.na
\fBCONFIG_STATUS_REG_PRESENT\fR
.ad
.RS 30n
Configuration Status Register present
.RE

.sp
.ne 2
.na
\fBCONFIG_PINREPL_REG_PRESENT\fR
.ad
.RS 30n
Pin Replacement Register present
.RE

.sp
.ne 2
.na
\fBCONFIG_COPY_REG_PRESENT\fR
.ad
.RS 30n
Copy Register present
.RE

.sp
.ne 2
.na
\fBCONFIG_EXSTAT_REG_PRESENT\fR
.ad
.RS 30n
Extended Status Register present
.RE

.sp
.ne 2
.na
\fBCONFIG_IOBASE0_REG_PRESENT\fR
.ad
.RS 30n
IO Base 0 Register present
.RE

.sp
.ne 2
.na
\fBCONFIG_IOBASE1_REG_PRESENT\fR
.ad
.RS 30n
IO Base 1 Register present
.RE

.sp
.ne 2
.na
\fBCONFIG_IOBASE2_REG_PRESENT\fR
.ad
.RS 30n
IO Base2 Register present
.RE

.sp
.ne 2
.na
\fBCONFIG_IOBASE3_REG_PRESENT\fR
.ad
.RS 30n
IO Base3 Register present
.RE

.sp
.ne 2
.na
\fBCONFIG_IOLIMIT_REG_PRESENT\fR
.ad
.RS 30n
IO Limit Register present
.RE

.RE

.sp
.ne 2
.na
\fB\fBnr\fR\fR
.ad
.RS 11n
This field specifies the number of configuration registers that are present on
the \fBPC \fRCard.
.RE

.sp
.ne 2
.na
\fB\fBhr\fR\fR
.ad
.RS 11n
This field specifies the highest configuration register number that is present
on the \fBPC \fRCard.
.RE

.sp
.ne 2
.na
\fB\fBregs\fR\fR
.ad
.RS 11n
This array contains the offset from the start of Attribute Memory space for
each configuration register that is present on the \fBPC \fRCard. If a
configuration register is not present on the \fBPC \fRCard, the value in the
corresponding entry in the \fBregs\fR array is undefined.
.RE

.sp
.ne 2
.na
\fB\fBbase\fR\fR
.ad
.RS 11n
This field contains the offset from the start of Attribute Memory space to the
base of the \fBPC \fRCard configuration register space.
.RE

.sp
.ne 2
.na
\fB\fBlast\fR\fR
.ad
.RS 11n
This field contains the value of the last valid configuration index for this
\fBPC \fRCard.
.RE

.SH RETURN VALUES
.sp
.ne 2
.na
\fB\fBCS_SUCCESS\fR\fR
.ad
.RS 27n
Successful operation.
.RE

.sp
.ne 2
.na
\fB\fBCS_BAD_HANDLE\fR\fR
.ad
.RS 27n
Client handle is invalid.
.RE

.sp
.ne 2
.na
\fB\fBCS_UNKNOWN_TUPLE\fR\fR
.ad
.RS 27n
Parser does not know how to parse tuple.
.RE

.sp
.ne 2
.na
\fB\fBCS_NO_CARD\fR\fR
.ad
.RS 27n
No \fBPC \fRCard in socket.
.RE

.sp
.ne 2
.na
\fB\fBCS_NO_CIS\fR\fR
.ad
.RS 27n
No Card Information Structure (CIS) on \fBPC \fRCard.
.RE

.sp
.ne 2
.na
\fB\fBCS_UNSUPPORTED_FUNCTION\fR\fR
.ad
.RS 27n
No \fBPCMCIA \fRhardware installed.
.RE

.SH CONTEXT
.sp
.LP
This function may be called from user or kernel context.
.SH SEE ALSO
.sp
.LP
\fBcsx_GetFirstTuple\fR(9F), \fBcsx_GetTupleData\fR(9F),
\fBcsx_Parse_CISTPL_CFTABLE_ENTRY\fR(9F), \fBcsx_RegisterClient\fR(9F),
\fBcsx_ValidateCIS\fR(9F), \fBtuple\fR(9S)
.sp
.LP
\fIPC Card 95 Standard, PCMCIA/JEIDA\fR
.SH NOTES
.sp
.LP
\fBPC \fRCard drivers should not attempt to use configurations beyond the
"last" member in the \fBcistpl_config_t\fR structure.
